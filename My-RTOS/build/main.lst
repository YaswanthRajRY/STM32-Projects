ARM GAS  /tmp/ccOzNXXz.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.task_3,"ax",%progbits
  18              		.align	1
  19              		.global	task_3
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	task_3:
  27              	.LFB140:
  28              		.file 1 "src/main.c"
   1:src/main.c    **** #include "main.h"
   2:src/main.c    **** 
   3:src/main.c    **** void task_1(void);                      // task function prototype
   4:src/main.c    **** void task_2(void);
   5:src/main.c    **** void task_3(void);
   6:src/main.c    **** void blink(uint32_t pos);
   7:src/main.c    **** 
   8:src/main.c    **** Mutex_Typedef* mutex;
   9:src/main.c    **** 
  10:src/main.c    **** int main()
  11:src/main.c    **** {
  12:src/main.c    ****     SystemInit();                       // Initialize system
  13:src/main.c    ****     
  14:src/main.c    ****     mutex = createMutex();
  15:src/main.c    **** 
  16:src/main.c    ****     Log_s("Priority Preemptive scheduler Program.\n");
  17:src/main.c    **** 
  18:src/main.c    ****     Log_s("Creating tasks...");
  19:src/main.c    ****     createTask(task_1, "Task 1", 1);    // create task
  20:src/main.c    ****     createTask(task_2, "Task 2", 2);
  21:src/main.c    ****     createTask(task_3, "Task 3", 3);
  22:src/main.c    ****     Log_s("Tasks created sucessfully.\n");
  23:src/main.c    **** 
  24:src/main.c    ****     Log_s("Starting scheduler...");
  25:src/main.c    ****     start_scheduler();                  // Start scheduling the tasks
  26:src/main.c    **** 
  27:src/main.c    ****     while (1)
  28:src/main.c    ****     {
  29:src/main.c    **** 
  30:src/main.c    ****     }
ARM GAS  /tmp/ccOzNXXz.s 			page 2


  31:src/main.c    **** }
  32:src/main.c    **** 
  33:src/main.c    **** void task_1(void)                       // this function toggles Port B pin 5
  34:src/main.c    **** {
  35:src/main.c    ****     while (1)
  36:src/main.c    ****     {
  37:src/main.c    ****         blink(5);
  38:src/main.c    ****         task_delay(1000);
  39:src/main.c    ****     }
  40:src/main.c    **** }
  41:src/main.c    **** 
  42:src/main.c    **** void task_2(void)                       // this function toggles Port B pin 6
  43:src/main.c    **** {
  44:src/main.c    ****     while (1)
  45:src/main.c    ****     {
  46:src/main.c    ****         blink(6);
  47:src/main.c    ****         task_delay(1000);
  48:src/main.c    ****     }
  49:src/main.c    **** }
  50:src/main.c    **** 
  51:src/main.c    **** void task_3(void)                       // this function toggles Port B pin 7
  52:src/main.c    **** {
  29              		.loc 1 52 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34 0000 08B5     		push	{r3, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 3, -8
  38              		.cfi_offset 14, -4
  39              	.L2:
  53:src/main.c    ****     while (1)
  40              		.loc 1 53 5 discriminator 1 view .LVU1
  54:src/main.c    ****     {
  55:src/main.c    ****         GPIOB->ODR ^= GPIO_ODR_OD7;
  41              		.loc 1 55 9 discriminator 1 view .LVU2
  42              		.loc 1 55 20 is_stmt 0 discriminator 1 view .LVU3
  43 0002 054A     		ldr	r2, .L4
  44 0004 5369     		ldr	r3, [r2, #20]
  45 0006 83F08003 		eor	r3, r3, #128
  46 000a 5361     		str	r3, [r2, #20]
  56:src/main.c    ****         //blink(7);
  57:src/main.c    ****         task_delay(500);
  47              		.loc 1 57 9 is_stmt 1 discriminator 1 view .LVU4
  48 000c 4FF4FA70 		mov	r0, #500
  49 0010 FFF7FEFF 		bl	task_delay
  50              	.LVL0:
  53:src/main.c    ****     {
  51              		.loc 1 53 11 discriminator 1 view .LVU5
  52 0014 F5E7     		b	.L2
  53              	.L5:
  54 0016 00BF     		.align	2
  55              	.L4:
  56 0018 00040240 		.word	1073873920
  57              		.cfi_endproc
ARM GAS  /tmp/ccOzNXXz.s 			page 3


  58              	.LFE140:
  60              		.section	.rodata.main.str1.4,"aMS",%progbits,1
  61              		.align	2
  62              	.LC0:
  63 0000 5072696F 		.ascii	"Priority Preemptive scheduler Program.\012\000"
  63      72697479 
  63      20507265 
  63      656D7074 
  63      69766520 
  64              		.align	2
  65              	.LC1:
  66 0028 43726561 		.ascii	"Creating tasks...\000"
  66      74696E67 
  66      20746173 
  66      6B732E2E 
  66      2E00
  67 003a 0000     		.align	2
  68              	.LC2:
  69 003c 5461736B 		.ascii	"Task 1\000"
  69      203100
  70 0043 00       		.align	2
  71              	.LC3:
  72 0044 5461736B 		.ascii	"Task 2\000"
  72      203200
  73 004b 00       		.align	2
  74              	.LC4:
  75 004c 5461736B 		.ascii	"Task 3\000"
  75      203300
  76 0053 00       		.align	2
  77              	.LC5:
  78 0054 5461736B 		.ascii	"Tasks created sucessfully.\012\000"
  78      73206372 
  78      65617465 
  78      64207375 
  78      63657373 
  79              		.align	2
  80              	.LC6:
  81 0070 53746172 		.ascii	"Starting scheduler...\000"
  81      74696E67 
  81      20736368 
  81      6564756C 
  81      65722E2E 
  82              		.section	.text.main,"ax",%progbits
  83              		.align	1
  84              		.global	main
  85              		.syntax unified
  86              		.thumb
  87              		.thumb_func
  88              		.fpu fpv4-sp-d16
  90              	main:
  91              	.LFB137:
  11:src/main.c    ****     SystemInit();                       // Initialize system
  92              		.loc 1 11 1 view -0
  93              		.cfi_startproc
  94              		@ Volatile: function does not return.
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccOzNXXz.s 			page 4


  97 0000 08B5     		push	{r3, lr}
  98              	.LCFI1:
  99              		.cfi_def_cfa_offset 8
 100              		.cfi_offset 3, -8
 101              		.cfi_offset 14, -4
  12:src/main.c    ****     
 102              		.loc 1 12 5 view .LVU7
 103 0002 FFF7FEFF 		bl	SystemInit
 104              	.LVL1:
  14:src/main.c    **** 
 105              		.loc 1 14 5 view .LVU8
  14:src/main.c    **** 
 106              		.loc 1 14 13 is_stmt 0 view .LVU9
 107 0006 FFF7FEFF 		bl	createMutex
 108              	.LVL2:
  14:src/main.c    **** 
 109              		.loc 1 14 11 view .LVU10
 110 000a 104B     		ldr	r3, .L9
 111 000c 1860     		str	r0, [r3]
  16:src/main.c    **** 
 112              		.loc 1 16 5 is_stmt 1 view .LVU11
 113 000e 1048     		ldr	r0, .L9+4
 114 0010 FFF7FEFF 		bl	Log_s
 115              	.LVL3:
  18:src/main.c    ****     createTask(task_1, "Task 1", 1);    // create task
 116              		.loc 1 18 5 view .LVU12
 117 0014 0F48     		ldr	r0, .L9+8
 118 0016 FFF7FEFF 		bl	Log_s
 119              	.LVL4:
  19:src/main.c    ****     createTask(task_2, "Task 2", 2);
 120              		.loc 1 19 5 view .LVU13
 121 001a 0122     		movs	r2, #1
 122 001c 0E49     		ldr	r1, .L9+12
 123 001e 0F48     		ldr	r0, .L9+16
 124 0020 FFF7FEFF 		bl	createTask
 125              	.LVL5:
  20:src/main.c    ****     createTask(task_3, "Task 3", 3);
 126              		.loc 1 20 5 view .LVU14
 127 0024 0222     		movs	r2, #2
 128 0026 0E49     		ldr	r1, .L9+20
 129 0028 0E48     		ldr	r0, .L9+24
 130 002a FFF7FEFF 		bl	createTask
 131              	.LVL6:
  21:src/main.c    ****     Log_s("Tasks created sucessfully.\n");
 132              		.loc 1 21 5 view .LVU15
 133 002e 0322     		movs	r2, #3
 134 0030 0D49     		ldr	r1, .L9+28
 135 0032 0E48     		ldr	r0, .L9+32
 136 0034 FFF7FEFF 		bl	createTask
 137              	.LVL7:
  22:src/main.c    **** 
 138              		.loc 1 22 5 view .LVU16
 139 0038 0D48     		ldr	r0, .L9+36
 140 003a FFF7FEFF 		bl	Log_s
 141              	.LVL8:
  24:src/main.c    ****     start_scheduler();                  // Start scheduling the tasks
 142              		.loc 1 24 5 view .LVU17
ARM GAS  /tmp/ccOzNXXz.s 			page 5


 143 003e 0D48     		ldr	r0, .L9+40
 144 0040 FFF7FEFF 		bl	Log_s
 145              	.LVL9:
  25:src/main.c    **** 
 146              		.loc 1 25 5 view .LVU18
 147 0044 FFF7FEFF 		bl	start_scheduler
 148              	.LVL10:
 149              	.L7:
  27:src/main.c    ****     {
 150              		.loc 1 27 5 discriminator 1 view .LVU19
  30:src/main.c    **** }
 151              		.loc 1 30 5 discriminator 1 view .LVU20
  27:src/main.c    ****     {
 152              		.loc 1 27 11 discriminator 1 view .LVU21
 153 0048 FEE7     		b	.L7
 154              	.L10:
 155 004a 00BF     		.align	2
 156              	.L9:
 157 004c 00000000 		.word	.LANCHOR0
 158 0050 00000000 		.word	.LC0
 159 0054 28000000 		.word	.LC1
 160 0058 3C000000 		.word	.LC2
 161 005c 00000000 		.word	task_1
 162 0060 44000000 		.word	.LC3
 163 0064 00000000 		.word	task_2
 164 0068 4C000000 		.word	.LC4
 165 006c 00000000 		.word	task_3
 166 0070 54000000 		.word	.LC5
 167 0074 70000000 		.word	.LC6
 168              		.cfi_endproc
 169              	.LFE137:
 171              		.section	.text.blink,"ax",%progbits
 172              		.align	1
 173              		.global	blink
 174              		.syntax unified
 175              		.thumb
 176              		.thumb_func
 177              		.fpu fpv4-sp-d16
 179              	blink:
 180              	.LVL11:
 181              	.LFB141:
  58:src/main.c    ****     }
  59:src/main.c    **** }
  60:src/main.c    **** 
  61:src/main.c    **** void blink(uint32_t pos)
  62:src/main.c    **** {
 182              		.loc 1 62 1 view -0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              		.loc 1 62 1 is_stmt 0 view .LVU23
 187 0000 38B5     		push	{r3, r4, r5, lr}
 188              	.LCFI2:
 189              		.cfi_def_cfa_offset 16
 190              		.cfi_offset 3, -16
 191              		.cfi_offset 4, -12
 192              		.cfi_offset 5, -8
ARM GAS  /tmp/ccOzNXXz.s 			page 6


 193              		.cfi_offset 14, -4
 194 0002 0546     		mov	r5, r0
 195 0004 10E0     		b	.L14
 196              	.LVL12:
 197              	.L13:
 198              	.LBB2:
  63:src/main.c    ****     while (1)
  64:src/main.c    ****     {
  65:src/main.c    ****         MutexTake(&mutex);
  66:src/main.c    ****         for (uint8_t i=0; i<8; i++)
  67:src/main.c    ****         {
  68:src/main.c    ****             GPIOB->ODR ^= (1 << pos);
 199              		.loc 1 68 13 is_stmt 1 discriminator 3 view .LVU24
 200              		.loc 1 68 24 is_stmt 0 discriminator 3 view .LVU25
 201 0006 0B49     		ldr	r1, .L16
 202 0008 4B69     		ldr	r3, [r1, #20]
 203              		.loc 1 68 30 discriminator 3 view .LVU26
 204 000a 0122     		movs	r2, #1
 205 000c AA40     		lsls	r2, r2, r5
 206              		.loc 1 68 24 discriminator 3 view .LVU27
 207 000e 5340     		eors	r3, r3, r2
 208 0010 4B61     		str	r3, [r1, #20]
  69:src/main.c    ****             task_delay(500);
 209              		.loc 1 69 13 is_stmt 1 discriminator 3 view .LVU28
 210 0012 4FF4FA70 		mov	r0, #500
 211 0016 FFF7FEFF 		bl	task_delay
 212              	.LVL13:
  66:src/main.c    ****         {
 213              		.loc 1 66 32 discriminator 3 view .LVU29
  66:src/main.c    ****         {
 214              		.loc 1 66 33 is_stmt 0 discriminator 3 view .LVU30
 215 001a 0134     		adds	r4, r4, #1
 216              	.LVL14:
  66:src/main.c    ****         {
 217              		.loc 1 66 33 discriminator 3 view .LVU31
 218 001c E4B2     		uxtb	r4, r4
 219              	.LVL15:
 220              	.L12:
  66:src/main.c    ****         {
 221              		.loc 1 66 27 is_stmt 1 discriminator 1 view .LVU32
  66:src/main.c    ****         {
 222              		.loc 1 66 9 is_stmt 0 discriminator 1 view .LVU33
 223 001e 072C     		cmp	r4, #7
 224 0020 F1D9     		bls	.L13
 225              	.LBE2:
  70:src/main.c    ****         }
  71:src/main.c    ****         MutexGive(&mutex);
 226              		.loc 1 71 9 is_stmt 1 view .LVU34
 227 0022 0548     		ldr	r0, .L16+4
 228 0024 FFF7FEFF 		bl	MutexGive
 229              	.LVL16:
  63:src/main.c    ****     {
 230              		.loc 1 63 11 view .LVU35
 231              	.L14:
  63:src/main.c    ****     {
 232              		.loc 1 63 5 view .LVU36
  65:src/main.c    ****         for (uint8_t i=0; i<8; i++)
ARM GAS  /tmp/ccOzNXXz.s 			page 7


 233              		.loc 1 65 9 view .LVU37
 234 0028 0348     		ldr	r0, .L16+4
 235 002a FFF7FEFF 		bl	MutexTake
 236              	.LVL17:
  66:src/main.c    ****         {
 237              		.loc 1 66 9 view .LVU38
 238              	.LBB3:
  66:src/main.c    ****         {
 239              		.loc 1 66 14 view .LVU39
  66:src/main.c    ****         {
 240              		.loc 1 66 22 is_stmt 0 view .LVU40
 241 002e 0024     		movs	r4, #0
  66:src/main.c    ****         {
 242              		.loc 1 66 9 view .LVU41
 243 0030 F5E7     		b	.L12
 244              	.L17:
 245 0032 00BF     		.align	2
 246              	.L16:
 247 0034 00040240 		.word	1073873920
 248 0038 00000000 		.word	.LANCHOR0
 249              	.LBE3:
 250              		.cfi_endproc
 251              	.LFE141:
 253              		.section	.text.task_1,"ax",%progbits
 254              		.align	1
 255              		.global	task_1
 256              		.syntax unified
 257              		.thumb
 258              		.thumb_func
 259              		.fpu fpv4-sp-d16
 261              	task_1:
 262              	.LFB138:
  34:src/main.c    ****     while (1)
 263              		.loc 1 34 1 is_stmt 1 view -0
 264              		.cfi_startproc
 265              		@ Volatile: function does not return.
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268 0000 08B5     		push	{r3, lr}
 269              	.LCFI3:
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 3, -8
 272              		.cfi_offset 14, -4
  35:src/main.c    ****     {
 273              		.loc 1 35 5 view .LVU43
  37:src/main.c    ****         task_delay(1000);
 274              		.loc 1 37 9 view .LVU44
 275 0002 0520     		movs	r0, #5
 276 0004 FFF7FEFF 		bl	blink
 277              	.LVL18:
 278              		.cfi_endproc
 279              	.LFE138:
 281              		.section	.text.task_2,"ax",%progbits
 282              		.align	1
 283              		.global	task_2
 284              		.syntax unified
 285              		.thumb
ARM GAS  /tmp/ccOzNXXz.s 			page 8


 286              		.thumb_func
 287              		.fpu fpv4-sp-d16
 289              	task_2:
 290              	.LFB139:
  43:src/main.c    ****     while (1)
 291              		.loc 1 43 1 view -0
 292              		.cfi_startproc
 293              		@ Volatile: function does not return.
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296 0000 08B5     		push	{r3, lr}
 297              	.LCFI4:
 298              		.cfi_def_cfa_offset 8
 299              		.cfi_offset 3, -8
 300              		.cfi_offset 14, -4
  44:src/main.c    ****     {
 301              		.loc 1 44 5 view .LVU46
  46:src/main.c    ****         task_delay(1000);
 302              		.loc 1 46 9 view .LVU47
 303 0002 0620     		movs	r0, #6
 304 0004 FFF7FEFF 		bl	blink
 305              	.LVL19:
 306              		.cfi_endproc
 307              	.LFE139:
 309              		.global	mutex
 310              		.section	.bss.mutex,"aw",%nobits
 311              		.align	2
 312              		.set	.LANCHOR0,. + 0
 315              	mutex:
 316 0000 00000000 		.space	4
 317              		.text
 318              	.Letext0:
 319              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 320              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 321              		.file 4 "driver/Device/stm32f401xc.h"
 322              		.file 5 "inc/task.h"
 323              		.file 6 "inc/mutex.h"
 324              		.file 7 "inc/scheduler.h"
 325              		.file 8 "inc/main.h"
 326              		.file 9 "inc/Log.h"
ARM GAS  /tmp/ccOzNXXz.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccOzNXXz.s:18     .text.task_3:0000000000000000 $t
     /tmp/ccOzNXXz.s:26     .text.task_3:0000000000000000 task_3
     /tmp/ccOzNXXz.s:56     .text.task_3:0000000000000018 $d
     /tmp/ccOzNXXz.s:61     .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccOzNXXz.s:83     .text.main:0000000000000000 $t
     /tmp/ccOzNXXz.s:90     .text.main:0000000000000000 main
     /tmp/ccOzNXXz.s:157    .text.main:000000000000004c $d
     /tmp/ccOzNXXz.s:261    .text.task_1:0000000000000000 task_1
     /tmp/ccOzNXXz.s:289    .text.task_2:0000000000000000 task_2
     /tmp/ccOzNXXz.s:172    .text.blink:0000000000000000 $t
     /tmp/ccOzNXXz.s:179    .text.blink:0000000000000000 blink
     /tmp/ccOzNXXz.s:247    .text.blink:0000000000000034 $d
     /tmp/ccOzNXXz.s:254    .text.task_1:0000000000000000 $t
     /tmp/ccOzNXXz.s:282    .text.task_2:0000000000000000 $t
     /tmp/ccOzNXXz.s:315    .bss.mutex:0000000000000000 mutex
     /tmp/ccOzNXXz.s:311    .bss.mutex:0000000000000000 $d

UNDEFINED SYMBOLS
task_delay
SystemInit
createMutex
Log_s
createTask
start_scheduler
MutexGive
MutexTake
