ARM GAS  /tmp/cchXHjty.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"scheduler.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.set_PendSV,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	set_PendSV:
  26              	.LFB141:
  27              		.file 1 "src/scheduler.c"
   1:src/scheduler.c **** #include "scheduler.h"
   2:src/scheduler.c **** 
   3:src/scheduler.c **** extern TCB_Typedef* idle_task;			// defined in task.c
   4:src/scheduler.c **** 
   5:src/scheduler.c **** extern ready_task_list* ReadyHead;
   6:src/scheduler.c **** extern waiting_task_list* WaitingHead;
   7:src/scheduler.c **** 
   8:src/scheduler.c **** TCB_Typedef* next_task = NULL;		// used to iterate through circulat linked list
   9:src/scheduler.c **** 
  10:src/scheduler.c **** uint32_t stack_ptr;						// stores task stack address during context switching
  11:src/scheduler.c **** 
  12:src/scheduler.c **** /********************************** Function to get current running task **************************
  13:src/scheduler.c **** TCB_Typedef* getCurrentTask()
  14:src/scheduler.c **** {
  15:src/scheduler.c **** 	TCB_Typedef* currentTask;
  16:src/scheduler.c ****     __ASM volatile("MOV %0, r12" : "=r" (currentTask));
  17:src/scheduler.c ****     return currentTask;
  18:src/scheduler.c **** }
  19:src/scheduler.c **** 
  20:src/scheduler.c **** /**************************************** Function to switch task *********************************
  21:src/scheduler.c **** void switch_task()
  22:src/scheduler.c **** {	
  23:src/scheduler.c **** 	TCB_Typedef* executing_task = getCurrentTask();
  24:src/scheduler.c **** 	executing_task->psp = (uint32_t*)stack_ptr;			// update executing task stack address for saving co
  25:src/scheduler.c **** 
  26:src/scheduler.c **** 	TCB_Typedef* temp = ReadyHead->head;
  27:src/scheduler.c **** 	uint32_t prio = 255;
  28:src/scheduler.c **** 	
  29:src/scheduler.c **** 	if (ReadyHead->head == NULL)
  30:src/scheduler.c **** 	{
  31:src/scheduler.c **** 		executing_task = idle_task;
ARM GAS  /tmp/cchXHjty.s 			page 2


  32:src/scheduler.c **** 	}
  33:src/scheduler.c **** 	/*
  34:src/scheduler.c **** 	else
  35:src/scheduler.c **** 	{
  36:src/scheduler.c **** 		if (executing_task->next == NULL || next_task == NULL)
  37:src/scheduler.c **** 		{
  38:src/scheduler.c **** 			executing_task = ReadyHead->head;
  39:src/scheduler.c **** 			next_task = executing_task->next;
  40:src/scheduler.c **** 		}
  41:src/scheduler.c **** 		else
  42:src/scheduler.c **** 		{
  43:src/scheduler.c **** 			executing_task = next_task;
  44:src/scheduler.c **** 			next_task = executing_task->next;
  45:src/scheduler.c **** 		}
  46:src/scheduler.c **** 	}
  47:src/scheduler.c **** 	*/
  48:src/scheduler.c **** 	else
  49:src/scheduler.c **** 	{
  50:src/scheduler.c **** 		while (temp != NULL)
  51:src/scheduler.c **** 		{
  52:src/scheduler.c **** 			if (temp->priority < prio)
  53:src/scheduler.c **** 			{
  54:src/scheduler.c **** 				next_task = temp;
  55:src/scheduler.c **** 				prio = next_task->priority;
  56:src/scheduler.c **** 			}
  57:src/scheduler.c **** 			temp = temp->next;
  58:src/scheduler.c **** 		}
  59:src/scheduler.c **** 
  60:src/scheduler.c **** 		if (next_task == NULL)
  61:src/scheduler.c **** 		{
  62:src/scheduler.c **** 			executing_task = idle_task;
  63:src/scheduler.c **** 		}
  64:src/scheduler.c **** 		else
  65:src/scheduler.c **** 		{
  66:src/scheduler.c **** 			executing_task = next_task;
  67:src/scheduler.c **** 		}
  68:src/scheduler.c **** 	}
  69:src/scheduler.c **** 
  70:src/scheduler.c **** 	stack_ptr = (uint32_t)executing_task->psp;			// update next task stack address for restoring conte
  71:src/scheduler.c **** }
  72:src/scheduler.c **** 
  73:src/scheduler.c **** /************************************ Function to do context switching ****************************
  74:src/scheduler.c **** void PendSV_Handler(void)
  75:src/scheduler.c **** {
  76:src/scheduler.c **** 	__ASM volatile("MRS r0, psp");						// move current psp to r0
  77:src/scheduler.c **** 	__ASM volatile("STMDB r0!, {r4-r11}");					// push r4-r11 in program stack
  78:src/scheduler.c **** 	__ASM volatile("MSR psp, r0");						// update psp
  79:src/scheduler.c **** 	__ASM volatile("PUSH {lr}");						// push lr in main stack
  80:src/scheduler.c **** 	__ASM volatile("MOV %0, r0" : "=r" (stack_ptr)::);			// copy updated psp to current tasl tcb
  81:src/scheduler.c **** 	__ASM volatile("BL switch_task");					// branch to switch function
  82:src/scheduler.c **** 	__ASM volatile("MOV r0, %0" :: "r" (stack_ptr):);			// copy next task stack address to r0
  83:src/scheduler.c **** 	__ASM volatile("LDMIA r0!, {r4-r11}");					// pop saved context from task stack to r4-r11
  84:src/scheduler.c **** 	__ASM volatile("MSR psp, r0");						// update psp
  85:src/scheduler.c **** 	__ASM volatile("POP {lr}");						// pop lr from main stack
  86:src/scheduler.c **** 	__ASM volatile("BX lr");						// return from exception
  87:src/scheduler.c **** }
  88:src/scheduler.c **** 
ARM GAS  /tmp/cchXHjty.s 			page 3


  89:src/scheduler.c **** /************************************ Function to update task ticks *******************************
  90:src/scheduler.c **** static void update_task_delay()
  91:src/scheduler.c **** {
  92:src/scheduler.c **** 	if (WaitingHead->head == NULL)
  93:src/scheduler.c **** 	{
  94:src/scheduler.c **** 		return;
  95:src/scheduler.c **** 	}
  96:src/scheduler.c **** 	
  97:src/scheduler.c **** 	TCB_Typedef* current_task = WaitingHead->head;
  98:src/scheduler.c **** 	TCB_Typedef* nexttask = NULL;
  99:src/scheduler.c **** 	
 100:src/scheduler.c **** 	while (current_task != NULL)
 101:src/scheduler.c **** 	{
 102:src/scheduler.c **** 		nexttask = current_task->next;
 103:src/scheduler.c **** 
 104:src/scheduler.c **** 		if (current_task->delay == 0)
 105:src/scheduler.c **** 	    {
 106:src/scheduler.c **** 	        current_task->state = READY;				// if condition satisfies change task state to ready
 107:src/scheduler.c **** 			removeFromWaitingList(&current_task);
 108:src/scheduler.c **** 			addToReadyList(&current_task);
 109:src/scheduler.c **** 	    }
 110:src/scheduler.c **** 		else
 111:src/scheduler.c **** 		{
 112:src/scheduler.c **** 			current_task->delay--;
 113:src/scheduler.c **** 		}
 114:src/scheduler.c **** 	    current_task = nexttask;				// iterate to next task if condition not satisfies
 115:src/scheduler.c **** 	}
 116:src/scheduler.c **** }
 117:src/scheduler.c **** 
 118:src/scheduler.c **** /********************************** Function to trigger PendSV interrupt **************************
 119:src/scheduler.c **** static void set_PendSV()
 120:src/scheduler.c **** {
  28              		.loc 1 120 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 121:src/scheduler.c **** 	SCB->ICSR |= SCB_ICSR_PENDSVSET_Msk; 					// Trigger PendSV for context switch
  33              		.loc 1 121 2 view .LVU1
  34              		.loc 1 121 12 is_stmt 0 view .LVU2
  35 0000 024A     		ldr	r2, .L2
  36 0002 5368     		ldr	r3, [r2, #4]
  37 0004 43F08053 		orr	r3, r3, #268435456
  38 0008 5360     		str	r3, [r2, #4]
 122:src/scheduler.c **** }
  39              		.loc 1 122 1 view .LVU3
  40 000a 7047     		bx	lr
  41              	.L3:
  42              		.align	2
  43              	.L2:
  44 000c 00ED00E0 		.word	-536810240
  45              		.cfi_endproc
  46              	.LFE141:
  48              		.section	.text.update_task_delay,"ax",%progbits
  49              		.align	1
  50              		.syntax unified
  51              		.thumb
ARM GAS  /tmp/cchXHjty.s 			page 4


  52              		.thumb_func
  53              		.fpu fpv4-sp-d16
  55              	update_task_delay:
  56              	.LFB140:
  91:src/scheduler.c **** 	if (WaitingHead->head == NULL)
  57              		.loc 1 91 1 is_stmt 1 view -0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 8
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  92:src/scheduler.c **** 	{
  61              		.loc 1 92 2 view .LVU5
  92:src/scheduler.c **** 	{
  62              		.loc 1 92 17 is_stmt 0 view .LVU6
  63 0000 0E4B     		ldr	r3, .L17
  64 0002 1B68     		ldr	r3, [r3]
  65 0004 1B68     		ldr	r3, [r3]
  92:src/scheduler.c **** 	{
  66              		.loc 1 92 5 view .LVU7
  67 0006 BBB1     		cbz	r3, .L12
  91:src/scheduler.c **** 	if (WaitingHead->head == NULL)
  68              		.loc 1 91 1 view .LVU8
  69 0008 10B5     		push	{r4, lr}
  70              	.LCFI0:
  71              		.cfi_def_cfa_offset 8
  72              		.cfi_offset 4, -8
  73              		.cfi_offset 14, -4
  74 000a 82B0     		sub	sp, sp, #8
  75              	.LCFI1:
  76              		.cfi_def_cfa_offset 16
  97:src/scheduler.c **** 	TCB_Typedef* nexttask = NULL;
  77              		.loc 1 97 2 is_stmt 1 view .LVU9
  97:src/scheduler.c **** 	TCB_Typedef* nexttask = NULL;
  78              		.loc 1 97 15 is_stmt 0 view .LVU10
  79 000c 0193     		str	r3, [sp, #4]
  98:src/scheduler.c **** 	
  80              		.loc 1 98 2 is_stmt 1 view .LVU11
  81              	.LVL0:
 100:src/scheduler.c **** 	{
  82              		.loc 1 100 2 view .LVU12
 100:src/scheduler.c **** 	{
  83              		.loc 1 100 8 is_stmt 0 view .LVU13
  84 000e 08E0     		b	.L7
  85              	.LVL1:
  86              	.L16:
 106:src/scheduler.c **** 			removeFromWaitingList(&current_task);
  87              		.loc 1 106 10 is_stmt 1 view .LVU14
 106:src/scheduler.c **** 			removeFromWaitingList(&current_task);
  88              		.loc 1 106 30 is_stmt 0 view .LVU15
  89 0010 0122     		movs	r2, #1
  90 0012 9A82     		strh	r2, [r3, #20]	@ movhi
 107:src/scheduler.c **** 			addToReadyList(&current_task);
  91              		.loc 1 107 4 is_stmt 1 view .LVU16
  92 0014 01A8     		add	r0, sp, #4
  93 0016 FFF7FEFF 		bl	removeFromWaitingList
  94              	.LVL2:
 108:src/scheduler.c **** 	    }
  95              		.loc 1 108 4 view .LVU17
ARM GAS  /tmp/cchXHjty.s 			page 5


  96 001a 01A8     		add	r0, sp, #4
  97 001c FFF7FEFF 		bl	addToReadyList
  98              	.LVL3:
  99              	.L9:
 114:src/scheduler.c **** 	}
 100              		.loc 1 114 6 view .LVU18
 114:src/scheduler.c **** 	}
 101              		.loc 1 114 19 is_stmt 0 view .LVU19
 102 0020 0194     		str	r4, [sp, #4]
 103              	.LVL4:
 104              	.L7:
 100:src/scheduler.c **** 	{
 105              		.loc 1 100 8 is_stmt 1 view .LVU20
 100:src/scheduler.c **** 	{
 106              		.loc 1 100 22 is_stmt 0 view .LVU21
 107 0022 019B     		ldr	r3, [sp, #4]
 100:src/scheduler.c **** 	{
 108              		.loc 1 100 8 view .LVU22
 109 0024 33B1     		cbz	r3, .L15
 102:src/scheduler.c **** 
 110              		.loc 1 102 3 is_stmt 1 view .LVU23
 102:src/scheduler.c **** 
 111              		.loc 1 102 12 is_stmt 0 view .LVU24
 112 0026 1C68     		ldr	r4, [r3]
 113              	.LVL5:
 104:src/scheduler.c **** 	    {
 114              		.loc 1 104 3 is_stmt 1 view .LVU25
 104:src/scheduler.c **** 	    {
 115              		.loc 1 104 19 is_stmt 0 view .LVU26
 116 0028 1A69     		ldr	r2, [r3, #16]
 104:src/scheduler.c **** 	    {
 117              		.loc 1 104 6 view .LVU27
 118 002a 002A     		cmp	r2, #0
 119 002c F0D0     		beq	.L16
 112:src/scheduler.c **** 		}
 120              		.loc 1 112 4 is_stmt 1 view .LVU28
 112:src/scheduler.c **** 		}
 121              		.loc 1 112 23 is_stmt 0 view .LVU29
 122 002e 013A     		subs	r2, r2, #1
 123 0030 1A61     		str	r2, [r3, #16]
 124 0032 F5E7     		b	.L9
 125              	.LVL6:
 126              	.L15:
 116:src/scheduler.c **** 
 127              		.loc 1 116 1 view .LVU30
 128 0034 02B0     		add	sp, sp, #8
 129              	.LCFI2:
 130              		.cfi_def_cfa_offset 8
 131              		@ sp needed
 132 0036 10BD     		pop	{r4, pc}
 133              	.L12:
 134              	.LCFI3:
 135              		.cfi_def_cfa_offset 0
 136              		.cfi_restore 4
 137              		.cfi_restore 14
 138 0038 7047     		bx	lr
 139              	.L18:
ARM GAS  /tmp/cchXHjty.s 			page 6


 140 003a 00BF     		.align	2
 141              	.L17:
 142 003c 00000000 		.word	WaitingHead
 143              		.cfi_endproc
 144              	.LFE140:
 146              		.section	.text.getCurrentTask,"ax",%progbits
 147              		.align	1
 148              		.global	getCurrentTask
 149              		.syntax unified
 150              		.thumb
 151              		.thumb_func
 152              		.fpu fpv4-sp-d16
 154              	getCurrentTask:
 155              	.LFB137:
  14:src/scheduler.c **** 	TCB_Typedef* currentTask;
 156              		.loc 1 14 1 is_stmt 1 view -0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160              		@ link register save eliminated.
  15:src/scheduler.c ****     __ASM volatile("MOV %0, r12" : "=r" (currentTask));
 161              		.loc 1 15 2 view .LVU32
  16:src/scheduler.c ****     return currentTask;
 162              		.loc 1 16 5 view .LVU33
 163              		.syntax unified
 164              	@ 16 "src/scheduler.c" 1
 165 0000 6046     		MOV r0, r12
 166              	@ 0 "" 2
 167              	.LVL7:
  17:src/scheduler.c **** }
 168              		.loc 1 17 5 view .LVU34
  18:src/scheduler.c **** 
 169              		.loc 1 18 1 is_stmt 0 view .LVU35
 170              		.thumb
 171              		.syntax unified
 172 0002 7047     		bx	lr
 173              		.cfi_endproc
 174              	.LFE137:
 176              		.section	.text.switch_task,"ax",%progbits
 177              		.align	1
 178              		.global	switch_task
 179              		.syntax unified
 180              		.thumb
 181              		.thumb_func
 182              		.fpu fpv4-sp-d16
 184              	switch_task:
 185              	.LFB138:
  22:src/scheduler.c **** 	TCB_Typedef* executing_task = getCurrentTask();
 186              		.loc 1 22 1 is_stmt 1 view -0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190 0000 08B5     		push	{r3, lr}
 191              	.LCFI4:
 192              		.cfi_def_cfa_offset 8
 193              		.cfi_offset 3, -8
 194              		.cfi_offset 14, -4
ARM GAS  /tmp/cchXHjty.s 			page 7


  23:src/scheduler.c **** 	executing_task->psp = (uint32_t*)stack_ptr;			// update executing task stack address for saving co
 195              		.loc 1 23 2 view .LVU37
  23:src/scheduler.c **** 	executing_task->psp = (uint32_t*)stack_ptr;			// update executing task stack address for saving co
 196              		.loc 1 23 32 is_stmt 0 view .LVU38
 197 0002 FFF7FEFF 		bl	getCurrentTask
 198              	.LVL8:
  24:src/scheduler.c **** 
 199              		.loc 1 24 2 is_stmt 1 view .LVU39
  24:src/scheduler.c **** 
 200              		.loc 1 24 24 is_stmt 0 view .LVU40
 201 0006 0F4B     		ldr	r3, .L30
 202 0008 1B68     		ldr	r3, [r3]
  24:src/scheduler.c **** 
 203              		.loc 1 24 22 view .LVU41
 204 000a C360     		str	r3, [r0, #12]
  26:src/scheduler.c **** 	uint32_t prio = 255;
 205              		.loc 1 26 2 is_stmt 1 view .LVU42
  26:src/scheduler.c **** 	uint32_t prio = 255;
 206              		.loc 1 26 31 is_stmt 0 view .LVU43
 207 000c 0E4B     		ldr	r3, .L30+4
 208 000e 1B68     		ldr	r3, [r3]
  26:src/scheduler.c **** 	uint32_t prio = 255;
 209              		.loc 1 26 15 view .LVU44
 210 0010 1B68     		ldr	r3, [r3]
 211              	.LVL9:
  27:src/scheduler.c **** 	
 212              		.loc 1 27 2 is_stmt 1 view .LVU45
  29:src/scheduler.c **** 	{
 213              		.loc 1 29 2 view .LVU46
  29:src/scheduler.c **** 	{
 214              		.loc 1 29 5 is_stmt 0 view .LVU47
 215 0012 0BB1     		cbz	r3, .L27
  27:src/scheduler.c **** 	
 216              		.loc 1 27 11 view .LVU48
 217 0014 FF21     		movs	r1, #255
 218 0016 03E0     		b	.L21
 219              	.L27:
  31:src/scheduler.c **** 	}
 220              		.loc 1 31 3 is_stmt 1 view .LVU49
  31:src/scheduler.c **** 	}
 221              		.loc 1 31 18 is_stmt 0 view .LVU50
 222 0018 0C4B     		ldr	r3, .L30+8
 223              	.LVL10:
  31:src/scheduler.c **** 	}
 224              		.loc 1 31 18 view .LVU51
 225 001a 1B68     		ldr	r3, [r3]
 226              	.LVL11:
  31:src/scheduler.c **** 	}
 227              		.loc 1 31 18 view .LVU52
 228 001c 0BE0     		b	.L22
 229              	.LVL12:
 230              	.L23:
  57:src/scheduler.c **** 		}
 231              		.loc 1 57 4 is_stmt 1 view .LVU53
  57:src/scheduler.c **** 		}
 232              		.loc 1 57 9 is_stmt 0 view .LVU54
 233 001e 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cchXHjty.s 			page 8


 234              	.LVL13:
 235              	.L21:
  50:src/scheduler.c **** 		{
 236              		.loc 1 50 9 is_stmt 1 view .LVU55
 237 0020 33B1     		cbz	r3, .L28
  52:src/scheduler.c **** 			{
 238              		.loc 1 52 4 view .LVU56
  52:src/scheduler.c **** 			{
 239              		.loc 1 52 12 is_stmt 0 view .LVU57
 240 0022 DA8A     		ldrh	r2, [r3, #22]
  52:src/scheduler.c **** 			{
 241              		.loc 1 52 7 view .LVU58
 242 0024 8A42     		cmp	r2, r1
 243 0026 FAD2     		bcs	.L23
  54:src/scheduler.c **** 				prio = next_task->priority;
 244              		.loc 1 54 5 is_stmt 1 view .LVU59
  54:src/scheduler.c **** 				prio = next_task->priority;
 245              		.loc 1 54 15 is_stmt 0 view .LVU60
 246 0028 0949     		ldr	r1, .L30+12
 247              	.LVL14:
  54:src/scheduler.c **** 				prio = next_task->priority;
 248              		.loc 1 54 15 view .LVU61
 249 002a 0B60     		str	r3, [r1]
  55:src/scheduler.c **** 			}
 250              		.loc 1 55 5 is_stmt 1 view .LVU62
 251              	.LVL15:
  55:src/scheduler.c **** 			}
 252              		.loc 1 55 10 is_stmt 0 view .LVU63
 253 002c 1146     		mov	r1, r2
 254 002e F6E7     		b	.L23
 255              	.LVL16:
 256              	.L28:
  60:src/scheduler.c **** 		{
 257              		.loc 1 60 3 is_stmt 1 view .LVU64
  60:src/scheduler.c **** 		{
 258              		.loc 1 60 17 is_stmt 0 view .LVU65
 259 0030 074B     		ldr	r3, .L30+12
 260              	.LVL17:
  60:src/scheduler.c **** 		{
 261              		.loc 1 60 17 view .LVU66
 262 0032 1B68     		ldr	r3, [r3]
  60:src/scheduler.c **** 		{
 263              		.loc 1 60 6 view .LVU67
 264 0034 1BB1     		cbz	r3, .L29
 265              	.LVL18:
 266              	.L22:
  70:src/scheduler.c **** }
 267              		.loc 1 70 2 is_stmt 1 view .LVU68
  70:src/scheduler.c **** }
 268              		.loc 1 70 38 is_stmt 0 view .LVU69
 269 0036 DA68     		ldr	r2, [r3, #12]
  70:src/scheduler.c **** }
 270              		.loc 1 70 12 view .LVU70
 271 0038 024B     		ldr	r3, .L30
 272              	.LVL19:
  70:src/scheduler.c **** }
 273              		.loc 1 70 12 view .LVU71
ARM GAS  /tmp/cchXHjty.s 			page 9


 274 003a 1A60     		str	r2, [r3]
  71:src/scheduler.c **** 
 275              		.loc 1 71 1 view .LVU72
 276 003c 08BD     		pop	{r3, pc}
 277              	.LVL20:
 278              	.L29:
  62:src/scheduler.c **** 		}
 279              		.loc 1 62 4 is_stmt 1 view .LVU73
  62:src/scheduler.c **** 		}
 280              		.loc 1 62 19 is_stmt 0 view .LVU74
 281 003e 034B     		ldr	r3, .L30+8
 282 0040 1B68     		ldr	r3, [r3]
 283              	.LVL21:
  62:src/scheduler.c **** 		}
 284              		.loc 1 62 19 view .LVU75
 285 0042 F8E7     		b	.L22
 286              	.L31:
 287              		.align	2
 288              	.L30:
 289 0044 00000000 		.word	.LANCHOR0
 290 0048 00000000 		.word	ReadyHead
 291 004c 00000000 		.word	idle_task
 292 0050 00000000 		.word	.LANCHOR1
 293              		.cfi_endproc
 294              	.LFE138:
 296              		.section	.text.PendSV_Handler,"ax",%progbits
 297              		.align	1
 298              		.global	PendSV_Handler
 299              		.syntax unified
 300              		.thumb
 301              		.thumb_func
 302              		.fpu fpv4-sp-d16
 304              	PendSV_Handler:
 305              	.LFB139:
  75:src/scheduler.c **** 	__ASM volatile("MRS r0, psp");						// move current psp to r0
 306              		.loc 1 75 1 is_stmt 1 view -0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 0
 309              		@ frame_needed = 0, uses_anonymous_args = 0
 310              		@ link register save eliminated.
  76:src/scheduler.c **** 	__ASM volatile("STMDB r0!, {r4-r11}");					// push r4-r11 in program stack
 311              		.loc 1 76 2 view .LVU77
 312              		.syntax unified
 313              	@ 76 "src/scheduler.c" 1
 314 0000 EFF30980 		MRS r0, psp
 315              	@ 0 "" 2
  77:src/scheduler.c **** 	__ASM volatile("MSR psp, r0");						// update psp
 316              		.loc 1 77 2 view .LVU78
 317              	@ 77 "src/scheduler.c" 1
 318 0004 20E9F00F 		STMDB r0!, {r4-r11}
 319              	@ 0 "" 2
  78:src/scheduler.c **** 	__ASM volatile("PUSH {lr}");						// push lr in main stack
 320              		.loc 1 78 2 view .LVU79
 321              	@ 78 "src/scheduler.c" 1
 322 0008 80F30988 		MSR psp, r0
 323              	@ 0 "" 2
  79:src/scheduler.c **** 	__ASM volatile("MOV %0, r0" : "=r" (stack_ptr)::);			// copy updated psp to current tasl tcb
ARM GAS  /tmp/cchXHjty.s 			page 10


 324              		.loc 1 79 2 view .LVU80
 325              	@ 79 "src/scheduler.c" 1
 326 000c 00B5     		PUSH {lr}
 327              	@ 0 "" 2
  80:src/scheduler.c **** 	__ASM volatile("BL switch_task");					// branch to switch function
 328              		.loc 1 80 2 view .LVU81
 329              	@ 80 "src/scheduler.c" 1
 330 000e 0246     		MOV r2, r0
 331              	@ 0 "" 2
 332              		.thumb
 333              		.syntax unified
 334 0010 064B     		ldr	r3, .L33
 335 0012 1A60     		str	r2, [r3]
  81:src/scheduler.c **** 	__ASM volatile("MOV r0, %0" :: "r" (stack_ptr):);			// copy next task stack address to r0
 336              		.loc 1 81 2 view .LVU82
 337              		.syntax unified
 338              	@ 81 "src/scheduler.c" 1
 339 0014 FFF7FEFF 		BL switch_task
 340              	@ 0 "" 2
  82:src/scheduler.c **** 	__ASM volatile("LDMIA r0!, {r4-r11}");					// pop saved context from task stack to r4-r11
 341              		.loc 1 82 2 view .LVU83
 342              		.thumb
 343              		.syntax unified
 344 0018 1B68     		ldr	r3, [r3]
 345              		.syntax unified
 346              	@ 82 "src/scheduler.c" 1
 347 001a 1846     		MOV r0, r3
 348              	@ 0 "" 2
  83:src/scheduler.c **** 	__ASM volatile("MSR psp, r0");						// update psp
 349              		.loc 1 83 2 view .LVU84
 350              	@ 83 "src/scheduler.c" 1
 351 001c B0E8F00F 		LDMIA r0!, {r4-r11}
 352              	@ 0 "" 2
  84:src/scheduler.c **** 	__ASM volatile("POP {lr}");						// pop lr from main stack
 353              		.loc 1 84 2 view .LVU85
 354              	@ 84 "src/scheduler.c" 1
 355 0020 80F30988 		MSR psp, r0
 356              	@ 0 "" 2
  85:src/scheduler.c **** 	__ASM volatile("BX lr");						// return from exception
 357              		.loc 1 85 2 view .LVU86
 358              	@ 85 "src/scheduler.c" 1
 359 0024 5DF804EB 		POP {lr}
 360              	@ 0 "" 2
  86:src/scheduler.c **** }
 361              		.loc 1 86 2 view .LVU87
 362              	@ 86 "src/scheduler.c" 1
 363 0028 7047     		BX lr
 364              	@ 0 "" 2
  87:src/scheduler.c **** 
 365              		.loc 1 87 1 is_stmt 0 view .LVU88
 366              		.thumb
 367              		.syntax unified
 368 002a 7047     		bx	lr
 369              	.L34:
 370              		.align	2
 371              	.L33:
 372 002c 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/cchXHjty.s 			page 11


 373              		.cfi_endproc
 374              	.LFE139:
 376              		.section	.text.task_delay,"ax",%progbits
 377              		.align	1
 378              		.global	task_delay
 379              		.syntax unified
 380              		.thumb
 381              		.thumb_func
 382              		.fpu fpv4-sp-d16
 384              	task_delay:
 385              	.LVL22:
 386              	.LFB142:
 123:src/scheduler.c **** 
 124:src/scheduler.c **** /**************************************** Function to dalay task **********************************
 125:src/scheduler.c **** void task_delay(uint32_t ms)
 126:src/scheduler.c **** {
 387              		.loc 1 126 1 is_stmt 1 view -0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 8
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391              		.loc 1 126 1 is_stmt 0 view .LVU90
 392 0000 10B5     		push	{r4, lr}
 393              	.LCFI5:
 394              		.cfi_def_cfa_offset 8
 395              		.cfi_offset 4, -8
 396              		.cfi_offset 14, -4
 397 0002 82B0     		sub	sp, sp, #8
 398              	.LCFI6:
 399              		.cfi_def_cfa_offset 16
 400 0004 0446     		mov	r4, r0
 127:src/scheduler.c **** 	__disable_irq();							// disable interrupts
 401              		.loc 1 127 2 is_stmt 1 view .LVU91
 402              	.LBB14:
 403              	.LBI14:
 404              		.file 2 "driver/Core/cmsis_gcc.h"
   1:driver/Core/cmsis_gcc.h **** /**************************************************************************//**
   2:driver/Core/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:driver/Core/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:driver/Core/cmsis_gcc.h ****  * @version  V5.4.1
   5:driver/Core/cmsis_gcc.h ****  * @date     27. May 2021
   6:driver/Core/cmsis_gcc.h ****  ******************************************************************************/
   7:driver/Core/cmsis_gcc.h **** /*
   8:driver/Core/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:driver/Core/cmsis_gcc.h ****  *
  10:driver/Core/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:driver/Core/cmsis_gcc.h ****  *
  12:driver/Core/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:driver/Core/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:driver/Core/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:driver/Core/cmsis_gcc.h ****  *
  16:driver/Core/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:driver/Core/cmsis_gcc.h ****  *
  18:driver/Core/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:driver/Core/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:driver/Core/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:driver/Core/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:driver/Core/cmsis_gcc.h ****  * limitations under the License.
ARM GAS  /tmp/cchXHjty.s 			page 12


  23:driver/Core/cmsis_gcc.h ****  */
  24:driver/Core/cmsis_gcc.h **** 
  25:driver/Core/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:driver/Core/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:driver/Core/cmsis_gcc.h **** 
  28:driver/Core/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:driver/Core/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:driver/Core/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:driver/Core/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:driver/Core/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:driver/Core/cmsis_gcc.h **** 
  34:driver/Core/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:driver/Core/cmsis_gcc.h **** #ifndef __has_builtin
  36:driver/Core/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:driver/Core/cmsis_gcc.h **** #endif
  38:driver/Core/cmsis_gcc.h **** 
  39:driver/Core/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:driver/Core/cmsis_gcc.h **** #ifndef   __ASM
  41:driver/Core/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:driver/Core/cmsis_gcc.h **** #endif
  43:driver/Core/cmsis_gcc.h **** #ifndef   __INLINE
  44:driver/Core/cmsis_gcc.h ****   #define __INLINE                               inline
  45:driver/Core/cmsis_gcc.h **** #endif
  46:driver/Core/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:driver/Core/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:driver/Core/cmsis_gcc.h **** #endif
  49:driver/Core/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:driver/Core/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:driver/Core/cmsis_gcc.h **** #endif
  52:driver/Core/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:driver/Core/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:driver/Core/cmsis_gcc.h **** #endif
  55:driver/Core/cmsis_gcc.h **** #ifndef   __USED
  56:driver/Core/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:driver/Core/cmsis_gcc.h **** #endif
  58:driver/Core/cmsis_gcc.h **** #ifndef   __WEAK
  59:driver/Core/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:driver/Core/cmsis_gcc.h **** #endif
  61:driver/Core/cmsis_gcc.h **** #ifndef   __PACKED
  62:driver/Core/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:driver/Core/cmsis_gcc.h **** #endif
  64:driver/Core/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:driver/Core/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:driver/Core/cmsis_gcc.h **** #endif
  67:driver/Core/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:driver/Core/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:driver/Core/cmsis_gcc.h **** #endif
  70:driver/Core/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:driver/Core/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:driver/Core/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:driver/Core/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:driver/Core/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:driver/Core/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:driver/Core/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:driver/Core/cmsis_gcc.h **** #endif
  78:driver/Core/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:driver/Core/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /tmp/cchXHjty.s 			page 13


  80:driver/Core/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:driver/Core/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:driver/Core/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:driver/Core/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:driver/Core/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:driver/Core/cmsis_gcc.h **** #endif
  86:driver/Core/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:driver/Core/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:driver/Core/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:driver/Core/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:driver/Core/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:driver/Core/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:driver/Core/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:driver/Core/cmsis_gcc.h **** #endif
  94:driver/Core/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:driver/Core/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:driver/Core/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:driver/Core/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:driver/Core/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:driver/Core/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:driver/Core/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:driver/Core/cmsis_gcc.h **** #endif
 102:driver/Core/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:driver/Core/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:driver/Core/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:driver/Core/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:driver/Core/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:driver/Core/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:driver/Core/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:driver/Core/cmsis_gcc.h **** #endif
 110:driver/Core/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:driver/Core/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:driver/Core/cmsis_gcc.h **** #endif
 113:driver/Core/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:driver/Core/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:driver/Core/cmsis_gcc.h **** #endif
 116:driver/Core/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:driver/Core/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:driver/Core/cmsis_gcc.h **** #endif
 119:driver/Core/cmsis_gcc.h **** 
 120:driver/Core/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:driver/Core/cmsis_gcc.h **** 
 122:driver/Core/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:driver/Core/cmsis_gcc.h **** 
 124:driver/Core/cmsis_gcc.h **** /**
 125:driver/Core/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:driver/Core/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:driver/Core/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:driver/Core/cmsis_gcc.h ****            in the used linker script.
 129:driver/Core/cmsis_gcc.h **** 
 130:driver/Core/cmsis_gcc.h ****  */
 131:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:driver/Core/cmsis_gcc.h **** {
 133:driver/Core/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:driver/Core/cmsis_gcc.h **** 
 135:driver/Core/cmsis_gcc.h ****   typedef struct {
 136:driver/Core/cmsis_gcc.h ****     uint32_t const* src;
ARM GAS  /tmp/cchXHjty.s 			page 14


 137:driver/Core/cmsis_gcc.h ****     uint32_t* dest;
 138:driver/Core/cmsis_gcc.h ****     uint32_t  wlen;
 139:driver/Core/cmsis_gcc.h ****   } __copy_table_t;
 140:driver/Core/cmsis_gcc.h **** 
 141:driver/Core/cmsis_gcc.h ****   typedef struct {
 142:driver/Core/cmsis_gcc.h ****     uint32_t* dest;
 143:driver/Core/cmsis_gcc.h ****     uint32_t  wlen;
 144:driver/Core/cmsis_gcc.h ****   } __zero_table_t;
 145:driver/Core/cmsis_gcc.h **** 
 146:driver/Core/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:driver/Core/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:driver/Core/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:driver/Core/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:driver/Core/cmsis_gcc.h **** 
 151:driver/Core/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:driver/Core/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:driver/Core/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:driver/Core/cmsis_gcc.h ****     }
 155:driver/Core/cmsis_gcc.h ****   }
 156:driver/Core/cmsis_gcc.h **** 
 157:driver/Core/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:driver/Core/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:driver/Core/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:driver/Core/cmsis_gcc.h ****     }
 161:driver/Core/cmsis_gcc.h ****   }
 162:driver/Core/cmsis_gcc.h **** 
 163:driver/Core/cmsis_gcc.h ****   _start();
 164:driver/Core/cmsis_gcc.h **** }
 165:driver/Core/cmsis_gcc.h **** 
 166:driver/Core/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:driver/Core/cmsis_gcc.h **** #endif
 168:driver/Core/cmsis_gcc.h **** 
 169:driver/Core/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:driver/Core/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:driver/Core/cmsis_gcc.h **** #endif
 172:driver/Core/cmsis_gcc.h **** 
 173:driver/Core/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:driver/Core/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:driver/Core/cmsis_gcc.h **** #endif
 176:driver/Core/cmsis_gcc.h **** 
 177:driver/Core/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:driver/Core/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:driver/Core/cmsis_gcc.h **** #endif
 180:driver/Core/cmsis_gcc.h **** 
 181:driver/Core/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:driver/Core/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:driver/Core/cmsis_gcc.h **** #endif
 184:driver/Core/cmsis_gcc.h **** 
 185:driver/Core/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:driver/Core/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:driver/Core/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:driver/Core/cmsis_gcc.h **** #endif
 189:driver/Core/cmsis_gcc.h **** 
 190:driver/Core/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:driver/Core/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:driver/Core/cmsis_gcc.h **** #endif
 193:driver/Core/cmsis_gcc.h **** 
ARM GAS  /tmp/cchXHjty.s 			page 15


 194:driver/Core/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:driver/Core/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:driver/Core/cmsis_gcc.h **** #endif
 197:driver/Core/cmsis_gcc.h **** 
 198:driver/Core/cmsis_gcc.h **** 
 199:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:driver/Core/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:driver/Core/cmsis_gcc.h **** }
 202:driver/Core/cmsis_gcc.h **** #endif
 203:driver/Core/cmsis_gcc.h **** 
 204:driver/Core/cmsis_gcc.h **** 
 205:driver/Core/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:driver/Core/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:driver/Core/cmsis_gcc.h ****   Access to dedicated instructions
 208:driver/Core/cmsis_gcc.h ****   @{
 209:driver/Core/cmsis_gcc.h **** */
 210:driver/Core/cmsis_gcc.h **** 
 211:driver/Core/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:driver/Core/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:driver/Core/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:driver/Core/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:driver/Core/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:driver/Core/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:driver/Core/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:driver/Core/cmsis_gcc.h **** #else
 219:driver/Core/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:driver/Core/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:driver/Core/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:driver/Core/cmsis_gcc.h **** #endif
 223:driver/Core/cmsis_gcc.h **** 
 224:driver/Core/cmsis_gcc.h **** /**
 225:driver/Core/cmsis_gcc.h ****   \brief   No Operation
 226:driver/Core/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:driver/Core/cmsis_gcc.h ****  */
 228:driver/Core/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:driver/Core/cmsis_gcc.h **** 
 230:driver/Core/cmsis_gcc.h **** /**
 231:driver/Core/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:driver/Core/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:driver/Core/cmsis_gcc.h ****  */
 234:driver/Core/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:driver/Core/cmsis_gcc.h **** 
 236:driver/Core/cmsis_gcc.h **** 
 237:driver/Core/cmsis_gcc.h **** /**
 238:driver/Core/cmsis_gcc.h ****   \brief   Wait For Event
 239:driver/Core/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:driver/Core/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:driver/Core/cmsis_gcc.h ****  */
 242:driver/Core/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:driver/Core/cmsis_gcc.h **** 
 244:driver/Core/cmsis_gcc.h **** 
 245:driver/Core/cmsis_gcc.h **** /**
 246:driver/Core/cmsis_gcc.h ****   \brief   Send Event
 247:driver/Core/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:driver/Core/cmsis_gcc.h ****  */
 249:driver/Core/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:driver/Core/cmsis_gcc.h **** 
ARM GAS  /tmp/cchXHjty.s 			page 16


 251:driver/Core/cmsis_gcc.h **** 
 252:driver/Core/cmsis_gcc.h **** /**
 253:driver/Core/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:driver/Core/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:driver/Core/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:driver/Core/cmsis_gcc.h ****            after the instruction has been completed.
 257:driver/Core/cmsis_gcc.h ****  */
 258:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:driver/Core/cmsis_gcc.h **** {
 260:driver/Core/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:driver/Core/cmsis_gcc.h **** }
 262:driver/Core/cmsis_gcc.h **** 
 263:driver/Core/cmsis_gcc.h **** 
 264:driver/Core/cmsis_gcc.h **** /**
 265:driver/Core/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:driver/Core/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:driver/Core/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:driver/Core/cmsis_gcc.h ****  */
 269:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:driver/Core/cmsis_gcc.h **** {
 271:driver/Core/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:driver/Core/cmsis_gcc.h **** }
 273:driver/Core/cmsis_gcc.h **** 
 274:driver/Core/cmsis_gcc.h **** 
 275:driver/Core/cmsis_gcc.h **** /**
 276:driver/Core/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:driver/Core/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:driver/Core/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:driver/Core/cmsis_gcc.h ****  */
 280:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:driver/Core/cmsis_gcc.h **** {
 282:driver/Core/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:driver/Core/cmsis_gcc.h **** }
 284:driver/Core/cmsis_gcc.h **** 
 285:driver/Core/cmsis_gcc.h **** 
 286:driver/Core/cmsis_gcc.h **** /**
 287:driver/Core/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:driver/Core/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:driver/Core/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:driver/Core/cmsis_gcc.h ****   \return               Reversed value
 291:driver/Core/cmsis_gcc.h ****  */
 292:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:driver/Core/cmsis_gcc.h **** {
 294:driver/Core/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:driver/Core/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:driver/Core/cmsis_gcc.h **** #else
 297:driver/Core/cmsis_gcc.h ****   uint32_t result;
 298:driver/Core/cmsis_gcc.h **** 
 299:driver/Core/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:driver/Core/cmsis_gcc.h ****   return result;
 301:driver/Core/cmsis_gcc.h **** #endif
 302:driver/Core/cmsis_gcc.h **** }
 303:driver/Core/cmsis_gcc.h **** 
 304:driver/Core/cmsis_gcc.h **** 
 305:driver/Core/cmsis_gcc.h **** /**
 306:driver/Core/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:driver/Core/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
ARM GAS  /tmp/cchXHjty.s 			page 17


 308:driver/Core/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:driver/Core/cmsis_gcc.h ****   \return               Reversed value
 310:driver/Core/cmsis_gcc.h ****  */
 311:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:driver/Core/cmsis_gcc.h **** {
 313:driver/Core/cmsis_gcc.h ****   uint32_t result;
 314:driver/Core/cmsis_gcc.h **** 
 315:driver/Core/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:driver/Core/cmsis_gcc.h ****   return result;
 317:driver/Core/cmsis_gcc.h **** }
 318:driver/Core/cmsis_gcc.h **** 
 319:driver/Core/cmsis_gcc.h **** 
 320:driver/Core/cmsis_gcc.h **** /**
 321:driver/Core/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:driver/Core/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:driver/Core/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:driver/Core/cmsis_gcc.h ****   \return               Reversed value
 325:driver/Core/cmsis_gcc.h ****  */
 326:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:driver/Core/cmsis_gcc.h **** {
 328:driver/Core/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:driver/Core/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:driver/Core/cmsis_gcc.h **** #else
 331:driver/Core/cmsis_gcc.h ****   int16_t result;
 332:driver/Core/cmsis_gcc.h **** 
 333:driver/Core/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:driver/Core/cmsis_gcc.h ****   return result;
 335:driver/Core/cmsis_gcc.h **** #endif
 336:driver/Core/cmsis_gcc.h **** }
 337:driver/Core/cmsis_gcc.h **** 
 338:driver/Core/cmsis_gcc.h **** 
 339:driver/Core/cmsis_gcc.h **** /**
 340:driver/Core/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:driver/Core/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:driver/Core/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:driver/Core/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:driver/Core/cmsis_gcc.h ****   \return               Rotated value
 345:driver/Core/cmsis_gcc.h ****  */
 346:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:driver/Core/cmsis_gcc.h **** {
 348:driver/Core/cmsis_gcc.h ****   op2 %= 32U;
 349:driver/Core/cmsis_gcc.h ****   if (op2 == 0U)
 350:driver/Core/cmsis_gcc.h ****   {
 351:driver/Core/cmsis_gcc.h ****     return op1;
 352:driver/Core/cmsis_gcc.h ****   }
 353:driver/Core/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:driver/Core/cmsis_gcc.h **** }
 355:driver/Core/cmsis_gcc.h **** 
 356:driver/Core/cmsis_gcc.h **** 
 357:driver/Core/cmsis_gcc.h **** /**
 358:driver/Core/cmsis_gcc.h ****   \brief   Breakpoint
 359:driver/Core/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:driver/Core/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:driver/Core/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:driver/Core/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:driver/Core/cmsis_gcc.h ****  */
 364:driver/Core/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
ARM GAS  /tmp/cchXHjty.s 			page 18


 365:driver/Core/cmsis_gcc.h **** 
 366:driver/Core/cmsis_gcc.h **** 
 367:driver/Core/cmsis_gcc.h **** /**
 368:driver/Core/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:driver/Core/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:driver/Core/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:driver/Core/cmsis_gcc.h ****   \return               Reversed value
 372:driver/Core/cmsis_gcc.h ****  */
 373:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:driver/Core/cmsis_gcc.h **** {
 375:driver/Core/cmsis_gcc.h ****   uint32_t result;
 376:driver/Core/cmsis_gcc.h **** 
 377:driver/Core/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:driver/Core/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:driver/Core/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:driver/Core/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:driver/Core/cmsis_gcc.h **** #else
 382:driver/Core/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:driver/Core/cmsis_gcc.h **** 
 384:driver/Core/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:driver/Core/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:driver/Core/cmsis_gcc.h ****   {
 387:driver/Core/cmsis_gcc.h ****     result <<= 1U;
 388:driver/Core/cmsis_gcc.h ****     result |= value & 1U;
 389:driver/Core/cmsis_gcc.h ****     s--;
 390:driver/Core/cmsis_gcc.h ****   }
 391:driver/Core/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:driver/Core/cmsis_gcc.h **** #endif
 393:driver/Core/cmsis_gcc.h ****   return result;
 394:driver/Core/cmsis_gcc.h **** }
 395:driver/Core/cmsis_gcc.h **** 
 396:driver/Core/cmsis_gcc.h **** 
 397:driver/Core/cmsis_gcc.h **** /**
 398:driver/Core/cmsis_gcc.h ****   \brief   Count leading zeros
 399:driver/Core/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:driver/Core/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:driver/Core/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:driver/Core/cmsis_gcc.h ****  */
 403:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:driver/Core/cmsis_gcc.h **** {
 405:driver/Core/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:driver/Core/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:driver/Core/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:driver/Core/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:driver/Core/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:driver/Core/cmsis_gcc.h ****      is non-zero".
 411:driver/Core/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:driver/Core/cmsis_gcc.h ****      single CLZ instruction.
 413:driver/Core/cmsis_gcc.h ****    */
 414:driver/Core/cmsis_gcc.h ****   if (value == 0U)
 415:driver/Core/cmsis_gcc.h ****   {
 416:driver/Core/cmsis_gcc.h ****     return 32U;
 417:driver/Core/cmsis_gcc.h ****   }
 418:driver/Core/cmsis_gcc.h ****   return __builtin_clz(value);
 419:driver/Core/cmsis_gcc.h **** }
 420:driver/Core/cmsis_gcc.h **** 
 421:driver/Core/cmsis_gcc.h **** 
ARM GAS  /tmp/cchXHjty.s 			page 19


 422:driver/Core/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:driver/Core/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:driver/Core/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:driver/Core/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:driver/Core/cmsis_gcc.h **** /**
 427:driver/Core/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:driver/Core/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:driver/Core/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:driver/Core/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:driver/Core/cmsis_gcc.h ****  */
 432:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:driver/Core/cmsis_gcc.h **** {
 434:driver/Core/cmsis_gcc.h ****     uint32_t result;
 435:driver/Core/cmsis_gcc.h **** 
 436:driver/Core/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:driver/Core/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:driver/Core/cmsis_gcc.h **** #else
 439:driver/Core/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:driver/Core/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:driver/Core/cmsis_gcc.h ****     */
 442:driver/Core/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:driver/Core/cmsis_gcc.h **** #endif
 444:driver/Core/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:driver/Core/cmsis_gcc.h **** }
 446:driver/Core/cmsis_gcc.h **** 
 447:driver/Core/cmsis_gcc.h **** 
 448:driver/Core/cmsis_gcc.h **** /**
 449:driver/Core/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:driver/Core/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:driver/Core/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:driver/Core/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:driver/Core/cmsis_gcc.h ****  */
 454:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:driver/Core/cmsis_gcc.h **** {
 456:driver/Core/cmsis_gcc.h ****     uint32_t result;
 457:driver/Core/cmsis_gcc.h **** 
 458:driver/Core/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:driver/Core/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:driver/Core/cmsis_gcc.h **** #else
 461:driver/Core/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:driver/Core/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:driver/Core/cmsis_gcc.h ****     */
 464:driver/Core/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:driver/Core/cmsis_gcc.h **** #endif
 466:driver/Core/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:driver/Core/cmsis_gcc.h **** }
 468:driver/Core/cmsis_gcc.h **** 
 469:driver/Core/cmsis_gcc.h **** 
 470:driver/Core/cmsis_gcc.h **** /**
 471:driver/Core/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:driver/Core/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:driver/Core/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:driver/Core/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:driver/Core/cmsis_gcc.h ****  */
 476:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:driver/Core/cmsis_gcc.h **** {
 478:driver/Core/cmsis_gcc.h ****     uint32_t result;
ARM GAS  /tmp/cchXHjty.s 			page 20


 479:driver/Core/cmsis_gcc.h **** 
 480:driver/Core/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:driver/Core/cmsis_gcc.h ****    return(result);
 482:driver/Core/cmsis_gcc.h **** }
 483:driver/Core/cmsis_gcc.h **** 
 484:driver/Core/cmsis_gcc.h **** 
 485:driver/Core/cmsis_gcc.h **** /**
 486:driver/Core/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:driver/Core/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:driver/Core/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:driver/Core/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:driver/Core/cmsis_gcc.h ****   \return          0  Function succeeded
 491:driver/Core/cmsis_gcc.h ****   \return          1  Function failed
 492:driver/Core/cmsis_gcc.h ****  */
 493:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:driver/Core/cmsis_gcc.h **** {
 495:driver/Core/cmsis_gcc.h ****    uint32_t result;
 496:driver/Core/cmsis_gcc.h **** 
 497:driver/Core/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:driver/Core/cmsis_gcc.h ****    return(result);
 499:driver/Core/cmsis_gcc.h **** }
 500:driver/Core/cmsis_gcc.h **** 
 501:driver/Core/cmsis_gcc.h **** 
 502:driver/Core/cmsis_gcc.h **** /**
 503:driver/Core/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:driver/Core/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:driver/Core/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:driver/Core/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:driver/Core/cmsis_gcc.h ****   \return          0  Function succeeded
 508:driver/Core/cmsis_gcc.h ****   \return          1  Function failed
 509:driver/Core/cmsis_gcc.h ****  */
 510:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:driver/Core/cmsis_gcc.h **** {
 512:driver/Core/cmsis_gcc.h ****    uint32_t result;
 513:driver/Core/cmsis_gcc.h **** 
 514:driver/Core/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:driver/Core/cmsis_gcc.h ****    return(result);
 516:driver/Core/cmsis_gcc.h **** }
 517:driver/Core/cmsis_gcc.h **** 
 518:driver/Core/cmsis_gcc.h **** 
 519:driver/Core/cmsis_gcc.h **** /**
 520:driver/Core/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:driver/Core/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:driver/Core/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:driver/Core/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:driver/Core/cmsis_gcc.h ****   \return          0  Function succeeded
 525:driver/Core/cmsis_gcc.h ****   \return          1  Function failed
 526:driver/Core/cmsis_gcc.h ****  */
 527:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:driver/Core/cmsis_gcc.h **** {
 529:driver/Core/cmsis_gcc.h ****    uint32_t result;
 530:driver/Core/cmsis_gcc.h **** 
 531:driver/Core/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:driver/Core/cmsis_gcc.h ****    return(result);
 533:driver/Core/cmsis_gcc.h **** }
 534:driver/Core/cmsis_gcc.h **** 
 535:driver/Core/cmsis_gcc.h **** 
ARM GAS  /tmp/cchXHjty.s 			page 21


 536:driver/Core/cmsis_gcc.h **** /**
 537:driver/Core/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:driver/Core/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:driver/Core/cmsis_gcc.h ****  */
 540:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:driver/Core/cmsis_gcc.h **** {
 542:driver/Core/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:driver/Core/cmsis_gcc.h **** }
 544:driver/Core/cmsis_gcc.h **** 
 545:driver/Core/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:driver/Core/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:driver/Core/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:driver/Core/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:driver/Core/cmsis_gcc.h **** 
 550:driver/Core/cmsis_gcc.h **** 
 551:driver/Core/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:driver/Core/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:driver/Core/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:driver/Core/cmsis_gcc.h **** /**
 555:driver/Core/cmsis_gcc.h ****   \brief   Signed Saturate
 556:driver/Core/cmsis_gcc.h ****   \details Saturates a signed value.
 557:driver/Core/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:driver/Core/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:driver/Core/cmsis_gcc.h ****   \return             Saturated value
 560:driver/Core/cmsis_gcc.h ****  */
 561:driver/Core/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:driver/Core/cmsis_gcc.h **** __extension__ \
 563:driver/Core/cmsis_gcc.h **** ({                          \
 564:driver/Core/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:driver/Core/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:driver/Core/cmsis_gcc.h ****   __RES; \
 567:driver/Core/cmsis_gcc.h ****  })
 568:driver/Core/cmsis_gcc.h **** 
 569:driver/Core/cmsis_gcc.h **** 
 570:driver/Core/cmsis_gcc.h **** /**
 571:driver/Core/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:driver/Core/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:driver/Core/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:driver/Core/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:driver/Core/cmsis_gcc.h ****   \return             Saturated value
 576:driver/Core/cmsis_gcc.h ****  */
 577:driver/Core/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:driver/Core/cmsis_gcc.h **** __extension__ \
 579:driver/Core/cmsis_gcc.h **** ({                          \
 580:driver/Core/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:driver/Core/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:driver/Core/cmsis_gcc.h ****   __RES; \
 583:driver/Core/cmsis_gcc.h ****  })
 584:driver/Core/cmsis_gcc.h **** 
 585:driver/Core/cmsis_gcc.h **** 
 586:driver/Core/cmsis_gcc.h **** /**
 587:driver/Core/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:driver/Core/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:driver/Core/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:driver/Core/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:driver/Core/cmsis_gcc.h ****   \return               Rotated value
 592:driver/Core/cmsis_gcc.h ****  */
ARM GAS  /tmp/cchXHjty.s 			page 22


 593:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:driver/Core/cmsis_gcc.h **** {
 595:driver/Core/cmsis_gcc.h ****   uint32_t result;
 596:driver/Core/cmsis_gcc.h **** 
 597:driver/Core/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:driver/Core/cmsis_gcc.h ****   return(result);
 599:driver/Core/cmsis_gcc.h **** }
 600:driver/Core/cmsis_gcc.h **** 
 601:driver/Core/cmsis_gcc.h **** 
 602:driver/Core/cmsis_gcc.h **** /**
 603:driver/Core/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:driver/Core/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:driver/Core/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:driver/Core/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:driver/Core/cmsis_gcc.h ****  */
 608:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:driver/Core/cmsis_gcc.h **** {
 610:driver/Core/cmsis_gcc.h ****     uint32_t result;
 611:driver/Core/cmsis_gcc.h **** 
 612:driver/Core/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:driver/Core/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:driver/Core/cmsis_gcc.h **** #else
 615:driver/Core/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:driver/Core/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:driver/Core/cmsis_gcc.h ****     */
 618:driver/Core/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:driver/Core/cmsis_gcc.h **** #endif
 620:driver/Core/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:driver/Core/cmsis_gcc.h **** }
 622:driver/Core/cmsis_gcc.h **** 
 623:driver/Core/cmsis_gcc.h **** 
 624:driver/Core/cmsis_gcc.h **** /**
 625:driver/Core/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:driver/Core/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:driver/Core/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:driver/Core/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:driver/Core/cmsis_gcc.h ****  */
 630:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:driver/Core/cmsis_gcc.h **** {
 632:driver/Core/cmsis_gcc.h ****     uint32_t result;
 633:driver/Core/cmsis_gcc.h **** 
 634:driver/Core/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:driver/Core/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:driver/Core/cmsis_gcc.h **** #else
 637:driver/Core/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:driver/Core/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:driver/Core/cmsis_gcc.h ****     */
 640:driver/Core/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:driver/Core/cmsis_gcc.h **** #endif
 642:driver/Core/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:driver/Core/cmsis_gcc.h **** }
 644:driver/Core/cmsis_gcc.h **** 
 645:driver/Core/cmsis_gcc.h **** 
 646:driver/Core/cmsis_gcc.h **** /**
 647:driver/Core/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:driver/Core/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:driver/Core/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
ARM GAS  /tmp/cchXHjty.s 			page 23


 650:driver/Core/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:driver/Core/cmsis_gcc.h ****  */
 652:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:driver/Core/cmsis_gcc.h **** {
 654:driver/Core/cmsis_gcc.h ****     uint32_t result;
 655:driver/Core/cmsis_gcc.h **** 
 656:driver/Core/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:driver/Core/cmsis_gcc.h ****    return(result);
 658:driver/Core/cmsis_gcc.h **** }
 659:driver/Core/cmsis_gcc.h **** 
 660:driver/Core/cmsis_gcc.h **** 
 661:driver/Core/cmsis_gcc.h **** /**
 662:driver/Core/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:driver/Core/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:driver/Core/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:driver/Core/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:driver/Core/cmsis_gcc.h ****  */
 667:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:driver/Core/cmsis_gcc.h **** {
 669:driver/Core/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:driver/Core/cmsis_gcc.h **** }
 671:driver/Core/cmsis_gcc.h **** 
 672:driver/Core/cmsis_gcc.h **** 
 673:driver/Core/cmsis_gcc.h **** /**
 674:driver/Core/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:driver/Core/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:driver/Core/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:driver/Core/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:driver/Core/cmsis_gcc.h ****  */
 679:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:driver/Core/cmsis_gcc.h **** {
 681:driver/Core/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:driver/Core/cmsis_gcc.h **** }
 683:driver/Core/cmsis_gcc.h **** 
 684:driver/Core/cmsis_gcc.h **** 
 685:driver/Core/cmsis_gcc.h **** /**
 686:driver/Core/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:driver/Core/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:driver/Core/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:driver/Core/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:driver/Core/cmsis_gcc.h ****  */
 691:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:driver/Core/cmsis_gcc.h **** {
 693:driver/Core/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:driver/Core/cmsis_gcc.h **** }
 695:driver/Core/cmsis_gcc.h **** 
 696:driver/Core/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:driver/Core/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:driver/Core/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:driver/Core/cmsis_gcc.h **** 
 700:driver/Core/cmsis_gcc.h **** /**
 701:driver/Core/cmsis_gcc.h ****   \brief   Signed Saturate
 702:driver/Core/cmsis_gcc.h ****   \details Saturates a signed value.
 703:driver/Core/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:driver/Core/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:driver/Core/cmsis_gcc.h ****   \return             Saturated value
 706:driver/Core/cmsis_gcc.h ****  */
ARM GAS  /tmp/cchXHjty.s 			page 24


 707:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:driver/Core/cmsis_gcc.h **** {
 709:driver/Core/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:driver/Core/cmsis_gcc.h ****   {
 711:driver/Core/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:driver/Core/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:driver/Core/cmsis_gcc.h ****     if (val > max)
 714:driver/Core/cmsis_gcc.h ****     {
 715:driver/Core/cmsis_gcc.h ****       return max;
 716:driver/Core/cmsis_gcc.h ****     }
 717:driver/Core/cmsis_gcc.h ****     else if (val < min)
 718:driver/Core/cmsis_gcc.h ****     {
 719:driver/Core/cmsis_gcc.h ****       return min;
 720:driver/Core/cmsis_gcc.h ****     }
 721:driver/Core/cmsis_gcc.h ****   }
 722:driver/Core/cmsis_gcc.h ****   return val;
 723:driver/Core/cmsis_gcc.h **** }
 724:driver/Core/cmsis_gcc.h **** 
 725:driver/Core/cmsis_gcc.h **** /**
 726:driver/Core/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:driver/Core/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:driver/Core/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:driver/Core/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:driver/Core/cmsis_gcc.h ****   \return             Saturated value
 731:driver/Core/cmsis_gcc.h ****  */
 732:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:driver/Core/cmsis_gcc.h **** {
 734:driver/Core/cmsis_gcc.h ****   if (sat <= 31U)
 735:driver/Core/cmsis_gcc.h ****   {
 736:driver/Core/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:driver/Core/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:driver/Core/cmsis_gcc.h ****     {
 739:driver/Core/cmsis_gcc.h ****       return max;
 740:driver/Core/cmsis_gcc.h ****     }
 741:driver/Core/cmsis_gcc.h ****     else if (val < 0)
 742:driver/Core/cmsis_gcc.h ****     {
 743:driver/Core/cmsis_gcc.h ****       return 0U;
 744:driver/Core/cmsis_gcc.h ****     }
 745:driver/Core/cmsis_gcc.h ****   }
 746:driver/Core/cmsis_gcc.h ****   return (uint32_t)val;
 747:driver/Core/cmsis_gcc.h **** }
 748:driver/Core/cmsis_gcc.h **** 
 749:driver/Core/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:driver/Core/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:driver/Core/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:driver/Core/cmsis_gcc.h **** 
 753:driver/Core/cmsis_gcc.h **** 
 754:driver/Core/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:driver/Core/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:driver/Core/cmsis_gcc.h **** /**
 757:driver/Core/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:driver/Core/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:driver/Core/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:driver/Core/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:driver/Core/cmsis_gcc.h ****  */
 762:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:driver/Core/cmsis_gcc.h **** {
ARM GAS  /tmp/cchXHjty.s 			page 25


 764:driver/Core/cmsis_gcc.h ****     uint32_t result;
 765:driver/Core/cmsis_gcc.h **** 
 766:driver/Core/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:driver/Core/cmsis_gcc.h ****    return ((uint8_t) result);
 768:driver/Core/cmsis_gcc.h **** }
 769:driver/Core/cmsis_gcc.h **** 
 770:driver/Core/cmsis_gcc.h **** 
 771:driver/Core/cmsis_gcc.h **** /**
 772:driver/Core/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:driver/Core/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:driver/Core/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:driver/Core/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:driver/Core/cmsis_gcc.h ****  */
 777:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:driver/Core/cmsis_gcc.h **** {
 779:driver/Core/cmsis_gcc.h ****     uint32_t result;
 780:driver/Core/cmsis_gcc.h **** 
 781:driver/Core/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:driver/Core/cmsis_gcc.h ****    return ((uint16_t) result);
 783:driver/Core/cmsis_gcc.h **** }
 784:driver/Core/cmsis_gcc.h **** 
 785:driver/Core/cmsis_gcc.h **** 
 786:driver/Core/cmsis_gcc.h **** /**
 787:driver/Core/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:driver/Core/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:driver/Core/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:driver/Core/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:driver/Core/cmsis_gcc.h ****  */
 792:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:driver/Core/cmsis_gcc.h **** {
 794:driver/Core/cmsis_gcc.h ****     uint32_t result;
 795:driver/Core/cmsis_gcc.h **** 
 796:driver/Core/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:driver/Core/cmsis_gcc.h ****    return(result);
 798:driver/Core/cmsis_gcc.h **** }
 799:driver/Core/cmsis_gcc.h **** 
 800:driver/Core/cmsis_gcc.h **** 
 801:driver/Core/cmsis_gcc.h **** /**
 802:driver/Core/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:driver/Core/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:driver/Core/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:driver/Core/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:driver/Core/cmsis_gcc.h ****  */
 807:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:driver/Core/cmsis_gcc.h **** {
 809:driver/Core/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:driver/Core/cmsis_gcc.h **** }
 811:driver/Core/cmsis_gcc.h **** 
 812:driver/Core/cmsis_gcc.h **** 
 813:driver/Core/cmsis_gcc.h **** /**
 814:driver/Core/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:driver/Core/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:driver/Core/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:driver/Core/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:driver/Core/cmsis_gcc.h ****  */
 819:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:driver/Core/cmsis_gcc.h **** {
ARM GAS  /tmp/cchXHjty.s 			page 26


 821:driver/Core/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:driver/Core/cmsis_gcc.h **** }
 823:driver/Core/cmsis_gcc.h **** 
 824:driver/Core/cmsis_gcc.h **** 
 825:driver/Core/cmsis_gcc.h **** /**
 826:driver/Core/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:driver/Core/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:driver/Core/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:driver/Core/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:driver/Core/cmsis_gcc.h ****  */
 831:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:driver/Core/cmsis_gcc.h **** {
 833:driver/Core/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:driver/Core/cmsis_gcc.h **** }
 835:driver/Core/cmsis_gcc.h **** 
 836:driver/Core/cmsis_gcc.h **** 
 837:driver/Core/cmsis_gcc.h **** /**
 838:driver/Core/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:driver/Core/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:driver/Core/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:driver/Core/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:driver/Core/cmsis_gcc.h ****  */
 843:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:driver/Core/cmsis_gcc.h **** {
 845:driver/Core/cmsis_gcc.h ****     uint32_t result;
 846:driver/Core/cmsis_gcc.h **** 
 847:driver/Core/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:driver/Core/cmsis_gcc.h ****    return ((uint8_t) result);
 849:driver/Core/cmsis_gcc.h **** }
 850:driver/Core/cmsis_gcc.h **** 
 851:driver/Core/cmsis_gcc.h **** 
 852:driver/Core/cmsis_gcc.h **** /**
 853:driver/Core/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:driver/Core/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:driver/Core/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:driver/Core/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:driver/Core/cmsis_gcc.h ****  */
 858:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:driver/Core/cmsis_gcc.h **** {
 860:driver/Core/cmsis_gcc.h ****     uint32_t result;
 861:driver/Core/cmsis_gcc.h **** 
 862:driver/Core/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:driver/Core/cmsis_gcc.h ****    return ((uint16_t) result);
 864:driver/Core/cmsis_gcc.h **** }
 865:driver/Core/cmsis_gcc.h **** 
 866:driver/Core/cmsis_gcc.h **** 
 867:driver/Core/cmsis_gcc.h **** /**
 868:driver/Core/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:driver/Core/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:driver/Core/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:driver/Core/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:driver/Core/cmsis_gcc.h ****  */
 873:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:driver/Core/cmsis_gcc.h **** {
 875:driver/Core/cmsis_gcc.h ****     uint32_t result;
 876:driver/Core/cmsis_gcc.h **** 
 877:driver/Core/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
ARM GAS  /tmp/cchXHjty.s 			page 27


 878:driver/Core/cmsis_gcc.h ****    return(result);
 879:driver/Core/cmsis_gcc.h **** }
 880:driver/Core/cmsis_gcc.h **** 
 881:driver/Core/cmsis_gcc.h **** 
 882:driver/Core/cmsis_gcc.h **** /**
 883:driver/Core/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:driver/Core/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:driver/Core/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:driver/Core/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:driver/Core/cmsis_gcc.h ****   \return          0  Function succeeded
 888:driver/Core/cmsis_gcc.h ****   \return          1  Function failed
 889:driver/Core/cmsis_gcc.h ****  */
 890:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:driver/Core/cmsis_gcc.h **** {
 892:driver/Core/cmsis_gcc.h ****    uint32_t result;
 893:driver/Core/cmsis_gcc.h **** 
 894:driver/Core/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:driver/Core/cmsis_gcc.h ****    return(result);
 896:driver/Core/cmsis_gcc.h **** }
 897:driver/Core/cmsis_gcc.h **** 
 898:driver/Core/cmsis_gcc.h **** 
 899:driver/Core/cmsis_gcc.h **** /**
 900:driver/Core/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:driver/Core/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:driver/Core/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:driver/Core/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:driver/Core/cmsis_gcc.h ****   \return          0  Function succeeded
 905:driver/Core/cmsis_gcc.h ****   \return          1  Function failed
 906:driver/Core/cmsis_gcc.h ****  */
 907:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:driver/Core/cmsis_gcc.h **** {
 909:driver/Core/cmsis_gcc.h ****    uint32_t result;
 910:driver/Core/cmsis_gcc.h **** 
 911:driver/Core/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:driver/Core/cmsis_gcc.h ****    return(result);
 913:driver/Core/cmsis_gcc.h **** }
 914:driver/Core/cmsis_gcc.h **** 
 915:driver/Core/cmsis_gcc.h **** 
 916:driver/Core/cmsis_gcc.h **** /**
 917:driver/Core/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:driver/Core/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:driver/Core/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:driver/Core/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:driver/Core/cmsis_gcc.h ****   \return          0  Function succeeded
 922:driver/Core/cmsis_gcc.h ****   \return          1  Function failed
 923:driver/Core/cmsis_gcc.h ****  */
 924:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:driver/Core/cmsis_gcc.h **** {
 926:driver/Core/cmsis_gcc.h ****    uint32_t result;
 927:driver/Core/cmsis_gcc.h **** 
 928:driver/Core/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:driver/Core/cmsis_gcc.h ****    return(result);
 930:driver/Core/cmsis_gcc.h **** }
 931:driver/Core/cmsis_gcc.h **** 
 932:driver/Core/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:driver/Core/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:driver/Core/cmsis_gcc.h **** 
ARM GAS  /tmp/cchXHjty.s 			page 28


 935:driver/Core/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:driver/Core/cmsis_gcc.h **** 
 937:driver/Core/cmsis_gcc.h **** 
 938:driver/Core/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:driver/Core/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:driver/Core/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:driver/Core/cmsis_gcc.h ****   @{
 942:driver/Core/cmsis_gcc.h ****  */
 943:driver/Core/cmsis_gcc.h **** 
 944:driver/Core/cmsis_gcc.h **** /**
 945:driver/Core/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:driver/Core/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:driver/Core/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:driver/Core/cmsis_gcc.h ****  */
 949:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:driver/Core/cmsis_gcc.h **** {
 951:driver/Core/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:driver/Core/cmsis_gcc.h **** }
 953:driver/Core/cmsis_gcc.h **** 
 954:driver/Core/cmsis_gcc.h **** 
 955:driver/Core/cmsis_gcc.h **** /**
 956:driver/Core/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:driver/Core/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:driver/Core/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:driver/Core/cmsis_gcc.h ****  */
 960:driver/Core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 405              		.loc 2 960 27 view .LVU92
 406              	.LBB15:
 961:driver/Core/cmsis_gcc.h **** {
 962:driver/Core/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 407              		.loc 2 962 3 view .LVU93
 408              		.syntax unified
 409              	@ 962 "driver/Core/cmsis_gcc.h" 1
 410 0006 72B6     		cpsid i
 411              	@ 0 "" 2
 412              		.thumb
 413              		.syntax unified
 414              	.LBE15:
 415              	.LBE14:
 128:src/scheduler.c **** 
 129:src/scheduler.c **** 	TCB_Typedef* current_task = getCurrentTask();
 416              		.loc 1 129 2 view .LVU94
 417              		.loc 1 129 30 is_stmt 0 view .LVU95
 418 0008 FFF7FEFF 		bl	getCurrentTask
 419              	.LVL23:
 420              		.loc 1 129 15 view .LVU96
 421 000c 0190     		str	r0, [sp, #4]
 130:src/scheduler.c **** 
 131:src/scheduler.c **** 	current_task->delay = ms;				// update task delay
 422              		.loc 1 131 2 is_stmt 1 view .LVU97
 423              		.loc 1 131 22 is_stmt 0 view .LVU98
 424 000e 0461     		str	r4, [r0, #16]
 132:src/scheduler.c **** 	current_task->state = BLOCKED;				// change task state to blocked
 425              		.loc 1 132 2 is_stmt 1 view .LVU99
 426              		.loc 1 132 22 is_stmt 0 view .LVU100
 427 0010 0323     		movs	r3, #3
 428 0012 8382     		strh	r3, [r0, #20]	@ movhi
ARM GAS  /tmp/cchXHjty.s 			page 29


 133:src/scheduler.c **** 
 134:src/scheduler.c **** 	removeFromReadyList(&current_task);
 429              		.loc 1 134 2 is_stmt 1 view .LVU101
 430 0014 01A8     		add	r0, sp, #4
 431 0016 FFF7FEFF 		bl	removeFromReadyList
 432              	.LVL24:
 135:src/scheduler.c **** 	addToWaitingList(&current_task);
 433              		.loc 1 135 2 view .LVU102
 434 001a 01A8     		add	r0, sp, #4
 435 001c FFF7FEFF 		bl	addToWaitingList
 436              	.LVL25:
 136:src/scheduler.c **** 
 137:src/scheduler.c **** 	set_PendSV();								// set PendSV interrupt
 437              		.loc 1 137 2 view .LVU103
 438 0020 FFF7FEFF 		bl	set_PendSV
 439              	.LVL26:
 138:src/scheduler.c **** 
 139:src/scheduler.c **** 	__enable_irq();								// enable interrupts
 440              		.loc 1 139 2 view .LVU104
 441              	.LBB16:
 442              	.LBI16:
 949:driver/Core/cmsis_gcc.h **** {
 443              		.loc 2 949 27 view .LVU105
 444              	.LBB17:
 951:driver/Core/cmsis_gcc.h **** }
 445              		.loc 2 951 3 view .LVU106
 446              		.syntax unified
 447              	@ 951 "driver/Core/cmsis_gcc.h" 1
 448 0024 62B6     		cpsie i
 449              	@ 0 "" 2
 450              		.thumb
 451              		.syntax unified
 452              	.LBE17:
 453              	.LBE16:
 140:src/scheduler.c **** }
 454              		.loc 1 140 1 is_stmt 0 view .LVU107
 455 0026 02B0     		add	sp, sp, #8
 456              	.LCFI7:
 457              		.cfi_def_cfa_offset 8
 458              		@ sp needed
 459 0028 10BD     		pop	{r4, pc}
 460              		.loc 1 140 1 view .LVU108
 461              		.cfi_endproc
 462              	.LFE142:
 464              		.section	.text.SysTick_Handler,"ax",%progbits
 465              		.align	1
 466              		.global	SysTick_Handler
 467              		.syntax unified
 468              		.thumb
 469              		.thumb_func
 470              		.fpu fpv4-sp-d16
 472              	SysTick_Handler:
 473              	.LFB143:
 141:src/scheduler.c **** 
 142:src/scheduler.c **** /************************************* Function for SysTick_Handler *******************************
 143:src/scheduler.c **** void SysTick_Handler(void) 
 144:src/scheduler.c **** {
ARM GAS  /tmp/cchXHjty.s 			page 30


 474              		.loc 1 144 1 is_stmt 1 view -0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478 0000 08B5     		push	{r3, lr}
 479              	.LCFI8:
 480              		.cfi_def_cfa_offset 8
 481              		.cfi_offset 3, -8
 482              		.cfi_offset 14, -4
 145:src/scheduler.c **** 	update_task_delay();							// update task tick
 483              		.loc 1 145 2 view .LVU110
 484 0002 FFF7FEFF 		bl	update_task_delay
 485              	.LVL27:
 146:src/scheduler.c ****     	set_PendSV();								// set PendSV to trigger interrupt
 486              		.loc 1 146 6 view .LVU111
 487 0006 FFF7FEFF 		bl	set_PendSV
 488              	.LVL28:
 147:src/scheduler.c **** }
 489              		.loc 1 147 1 is_stmt 0 view .LVU112
 490 000a 08BD     		pop	{r3, pc}
 491              		.cfi_endproc
 492              	.LFE143:
 494              		.section	.text.idleTask,"ax",%progbits
 495              		.align	1
 496              		.global	idleTask
 497              		.syntax unified
 498              		.thumb
 499              		.thumb_func
 500              		.fpu fpv4-sp-d16
 502              	idleTask:
 503              	.LFB144:
 148:src/scheduler.c **** 
 149:src/scheduler.c **** /****************************************** Idle task function ************************************
 150:src/scheduler.c **** void idleTask(void)
 151:src/scheduler.c **** {
 504              		.loc 1 151 1 is_stmt 1 view -0
 505              		.cfi_startproc
 506              		@ Volatile: function does not return.
 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 0, uses_anonymous_args = 0
 509              		@ link register save eliminated.
 152:src/scheduler.c **** 	SysTick_Config(42000000 / 1000);					// configure systick timer to interrupt every 1ms
 510              		.loc 1 152 2 view .LVU114
 511              	.LVL29:
 512              	.LBB18:
 513              	.LBI18:
 514              		.file 3 "driver/Core/core_cm4.h"
   1:driver/Core/core_cm4.h **** /**************************************************************************//**
   2:driver/Core/core_cm4.h ****  * @file     core_cm4.h
   3:driver/Core/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:driver/Core/core_cm4.h ****  * @version  V5.1.2
   5:driver/Core/core_cm4.h ****  * @date     04. June 2021
   6:driver/Core/core_cm4.h ****  ******************************************************************************/
   7:driver/Core/core_cm4.h **** /*
   8:driver/Core/core_cm4.h ****  * Copyright (c) 2009-2020 Arm Limited. All rights reserved.
   9:driver/Core/core_cm4.h ****  *
  10:driver/Core/core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
ARM GAS  /tmp/cchXHjty.s 			page 31


  11:driver/Core/core_cm4.h ****  *
  12:driver/Core/core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:driver/Core/core_cm4.h ****  * not use this file except in compliance with the License.
  14:driver/Core/core_cm4.h ****  * You may obtain a copy of the License at
  15:driver/Core/core_cm4.h ****  *
  16:driver/Core/core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:driver/Core/core_cm4.h ****  *
  18:driver/Core/core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:driver/Core/core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:driver/Core/core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:driver/Core/core_cm4.h ****  * See the License for the specific language governing permissions and
  22:driver/Core/core_cm4.h ****  * limitations under the License.
  23:driver/Core/core_cm4.h ****  */
  24:driver/Core/core_cm4.h **** 
  25:driver/Core/core_cm4.h **** #if   defined ( __ICCARM__ )
  26:driver/Core/core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:driver/Core/core_cm4.h **** #elif defined (__clang__)
  28:driver/Core/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:driver/Core/core_cm4.h **** #endif
  30:driver/Core/core_cm4.h **** 
  31:driver/Core/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:driver/Core/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:driver/Core/core_cm4.h **** 
  34:driver/Core/core_cm4.h **** #include <stdint.h>
  35:driver/Core/core_cm4.h **** 
  36:driver/Core/core_cm4.h **** #ifdef __cplusplus
  37:driver/Core/core_cm4.h ****  extern "C" {
  38:driver/Core/core_cm4.h **** #endif
  39:driver/Core/core_cm4.h **** 
  40:driver/Core/core_cm4.h **** /**
  41:driver/Core/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:driver/Core/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:driver/Core/core_cm4.h **** 
  44:driver/Core/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:driver/Core/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:driver/Core/core_cm4.h **** 
  47:driver/Core/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:driver/Core/core_cm4.h ****      Unions are used for effective representation of core registers.
  49:driver/Core/core_cm4.h **** 
  50:driver/Core/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:driver/Core/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:driver/Core/core_cm4.h ****  */
  53:driver/Core/core_cm4.h **** 
  54:driver/Core/core_cm4.h **** 
  55:driver/Core/core_cm4.h **** /*******************************************************************************
  56:driver/Core/core_cm4.h ****  *                 CMSIS definitions
  57:driver/Core/core_cm4.h ****  ******************************************************************************/
  58:driver/Core/core_cm4.h **** /**
  59:driver/Core/core_cm4.h ****   \ingroup Cortex_M4
  60:driver/Core/core_cm4.h ****   @{
  61:driver/Core/core_cm4.h ****  */
  62:driver/Core/core_cm4.h **** 
  63:driver/Core/core_cm4.h **** #include "cmsis_version.h"
  64:driver/Core/core_cm4.h **** 
  65:driver/Core/core_cm4.h **** /* CMSIS CM4 definitions */
  66:driver/Core/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:driver/Core/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
ARM GAS  /tmp/cchXHjty.s 			page 32


  68:driver/Core/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:driver/Core/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:driver/Core/core_cm4.h **** 
  71:driver/Core/core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:driver/Core/core_cm4.h **** 
  73:driver/Core/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:driver/Core/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:driver/Core/core_cm4.h **** */
  76:driver/Core/core_cm4.h **** #if defined ( __CC_ARM )
  77:driver/Core/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:driver/Core/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:driver/Core/core_cm4.h ****       #define __FPU_USED       1U
  80:driver/Core/core_cm4.h ****     #else
  81:driver/Core/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:driver/Core/core_cm4.h ****       #define __FPU_USED       0U
  83:driver/Core/core_cm4.h ****     #endif
  84:driver/Core/core_cm4.h ****   #else
  85:driver/Core/core_cm4.h ****     #define __FPU_USED         0U
  86:driver/Core/core_cm4.h ****   #endif
  87:driver/Core/core_cm4.h **** 
  88:driver/Core/core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:driver/Core/core_cm4.h ****   #if defined __ARM_FP
  90:driver/Core/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:driver/Core/core_cm4.h ****       #define __FPU_USED       1U
  92:driver/Core/core_cm4.h ****     #else
  93:driver/Core/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:driver/Core/core_cm4.h ****       #define __FPU_USED       0U
  95:driver/Core/core_cm4.h ****     #endif
  96:driver/Core/core_cm4.h ****   #else
  97:driver/Core/core_cm4.h ****     #define __FPU_USED         0U
  98:driver/Core/core_cm4.h ****   #endif
  99:driver/Core/core_cm4.h **** 
 100:driver/Core/core_cm4.h **** #elif defined ( __GNUC__ )
 101:driver/Core/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:driver/Core/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:driver/Core/core_cm4.h ****       #define __FPU_USED       1U
 104:driver/Core/core_cm4.h ****     #else
 105:driver/Core/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:driver/Core/core_cm4.h ****       #define __FPU_USED       0U
 107:driver/Core/core_cm4.h ****     #endif
 108:driver/Core/core_cm4.h ****   #else
 109:driver/Core/core_cm4.h ****     #define __FPU_USED         0U
 110:driver/Core/core_cm4.h ****   #endif
 111:driver/Core/core_cm4.h **** 
 112:driver/Core/core_cm4.h **** #elif defined ( __ICCARM__ )
 113:driver/Core/core_cm4.h ****   #if defined __ARMVFP__
 114:driver/Core/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:driver/Core/core_cm4.h ****       #define __FPU_USED       1U
 116:driver/Core/core_cm4.h ****     #else
 117:driver/Core/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:driver/Core/core_cm4.h ****       #define __FPU_USED       0U
 119:driver/Core/core_cm4.h ****     #endif
 120:driver/Core/core_cm4.h ****   #else
 121:driver/Core/core_cm4.h ****     #define __FPU_USED         0U
 122:driver/Core/core_cm4.h ****   #endif
 123:driver/Core/core_cm4.h **** 
 124:driver/Core/core_cm4.h **** #elif defined ( __TI_ARM__ )
ARM GAS  /tmp/cchXHjty.s 			page 33


 125:driver/Core/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:driver/Core/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:driver/Core/core_cm4.h ****       #define __FPU_USED       1U
 128:driver/Core/core_cm4.h ****     #else
 129:driver/Core/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:driver/Core/core_cm4.h ****       #define __FPU_USED       0U
 131:driver/Core/core_cm4.h ****     #endif
 132:driver/Core/core_cm4.h ****   #else
 133:driver/Core/core_cm4.h ****     #define __FPU_USED         0U
 134:driver/Core/core_cm4.h ****   #endif
 135:driver/Core/core_cm4.h **** 
 136:driver/Core/core_cm4.h **** #elif defined ( __TASKING__ )
 137:driver/Core/core_cm4.h ****   #if defined __FPU_VFP__
 138:driver/Core/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:driver/Core/core_cm4.h ****       #define __FPU_USED       1U
 140:driver/Core/core_cm4.h ****     #else
 141:driver/Core/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:driver/Core/core_cm4.h ****       #define __FPU_USED       0U
 143:driver/Core/core_cm4.h ****     #endif
 144:driver/Core/core_cm4.h ****   #else
 145:driver/Core/core_cm4.h ****     #define __FPU_USED         0U
 146:driver/Core/core_cm4.h ****   #endif
 147:driver/Core/core_cm4.h **** 
 148:driver/Core/core_cm4.h **** #elif defined ( __CSMC__ )
 149:driver/Core/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:driver/Core/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:driver/Core/core_cm4.h ****       #define __FPU_USED       1U
 152:driver/Core/core_cm4.h ****     #else
 153:driver/Core/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:driver/Core/core_cm4.h ****       #define __FPU_USED       0U
 155:driver/Core/core_cm4.h ****     #endif
 156:driver/Core/core_cm4.h ****   #else
 157:driver/Core/core_cm4.h ****     #define __FPU_USED         0U
 158:driver/Core/core_cm4.h ****   #endif
 159:driver/Core/core_cm4.h **** 
 160:driver/Core/core_cm4.h **** #endif
 161:driver/Core/core_cm4.h **** 
 162:driver/Core/core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:driver/Core/core_cm4.h **** 
 164:driver/Core/core_cm4.h **** 
 165:driver/Core/core_cm4.h **** #ifdef __cplusplus
 166:driver/Core/core_cm4.h **** }
 167:driver/Core/core_cm4.h **** #endif
 168:driver/Core/core_cm4.h **** 
 169:driver/Core/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:driver/Core/core_cm4.h **** 
 171:driver/Core/core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:driver/Core/core_cm4.h **** 
 173:driver/Core/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:driver/Core/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:driver/Core/core_cm4.h **** 
 176:driver/Core/core_cm4.h **** #ifdef __cplusplus
 177:driver/Core/core_cm4.h ****  extern "C" {
 178:driver/Core/core_cm4.h **** #endif
 179:driver/Core/core_cm4.h **** 
 180:driver/Core/core_cm4.h **** /* check device defines and use defaults */
 181:driver/Core/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
ARM GAS  /tmp/cchXHjty.s 			page 34


 182:driver/Core/core_cm4.h ****   #ifndef __CM4_REV
 183:driver/Core/core_cm4.h ****     #define __CM4_REV               0x0000U
 184:driver/Core/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:driver/Core/core_cm4.h ****   #endif
 186:driver/Core/core_cm4.h **** 
 187:driver/Core/core_cm4.h ****   #ifndef __FPU_PRESENT
 188:driver/Core/core_cm4.h ****     #define __FPU_PRESENT             0U
 189:driver/Core/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:driver/Core/core_cm4.h ****   #endif
 191:driver/Core/core_cm4.h **** 
 192:driver/Core/core_cm4.h ****   #ifndef __MPU_PRESENT
 193:driver/Core/core_cm4.h ****     #define __MPU_PRESENT             0U
 194:driver/Core/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:driver/Core/core_cm4.h ****   #endif
 196:driver/Core/core_cm4.h **** 
 197:driver/Core/core_cm4.h ****   #ifndef __VTOR_PRESENT
 198:driver/Core/core_cm4.h ****     #define __VTOR_PRESENT             1U
 199:driver/Core/core_cm4.h ****     #warning "__VTOR_PRESENT not defined in device header file; using default!"
 200:driver/Core/core_cm4.h ****   #endif
 201:driver/Core/core_cm4.h **** 
 202:driver/Core/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 203:driver/Core/core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 204:driver/Core/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 205:driver/Core/core_cm4.h ****   #endif
 206:driver/Core/core_cm4.h **** 
 207:driver/Core/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 208:driver/Core/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 209:driver/Core/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 210:driver/Core/core_cm4.h ****   #endif
 211:driver/Core/core_cm4.h **** #endif
 212:driver/Core/core_cm4.h **** 
 213:driver/Core/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 214:driver/Core/core_cm4.h **** /**
 215:driver/Core/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 216:driver/Core/core_cm4.h **** 
 217:driver/Core/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 218:driver/Core/core_cm4.h ****     \li to specify the access to peripheral variables.
 219:driver/Core/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 220:driver/Core/core_cm4.h **** */
 221:driver/Core/core_cm4.h **** #ifdef __cplusplus
 222:driver/Core/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 223:driver/Core/core_cm4.h **** #else
 224:driver/Core/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 225:driver/Core/core_cm4.h **** #endif
 226:driver/Core/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 227:driver/Core/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 228:driver/Core/core_cm4.h **** 
 229:driver/Core/core_cm4.h **** /* following defines should be used for structure members */
 230:driver/Core/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 231:driver/Core/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 232:driver/Core/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 233:driver/Core/core_cm4.h **** 
 234:driver/Core/core_cm4.h **** /*@} end of group Cortex_M4 */
 235:driver/Core/core_cm4.h **** 
 236:driver/Core/core_cm4.h **** 
 237:driver/Core/core_cm4.h **** 
 238:driver/Core/core_cm4.h **** /*******************************************************************************
ARM GAS  /tmp/cchXHjty.s 			page 35


 239:driver/Core/core_cm4.h ****  *                 Register Abstraction
 240:driver/Core/core_cm4.h ****   Core Register contain:
 241:driver/Core/core_cm4.h ****   - Core Register
 242:driver/Core/core_cm4.h ****   - Core NVIC Register
 243:driver/Core/core_cm4.h ****   - Core SCB Register
 244:driver/Core/core_cm4.h ****   - Core SysTick Register
 245:driver/Core/core_cm4.h ****   - Core Debug Register
 246:driver/Core/core_cm4.h ****   - Core MPU Register
 247:driver/Core/core_cm4.h ****   - Core FPU Register
 248:driver/Core/core_cm4.h ****  ******************************************************************************/
 249:driver/Core/core_cm4.h **** /**
 250:driver/Core/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 251:driver/Core/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 252:driver/Core/core_cm4.h **** */
 253:driver/Core/core_cm4.h **** 
 254:driver/Core/core_cm4.h **** /**
 255:driver/Core/core_cm4.h ****   \ingroup    CMSIS_core_register
 256:driver/Core/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 257:driver/Core/core_cm4.h ****   \brief      Core Register type definitions.
 258:driver/Core/core_cm4.h ****   @{
 259:driver/Core/core_cm4.h ****  */
 260:driver/Core/core_cm4.h **** 
 261:driver/Core/core_cm4.h **** /**
 262:driver/Core/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 263:driver/Core/core_cm4.h ****  */
 264:driver/Core/core_cm4.h **** typedef union
 265:driver/Core/core_cm4.h **** {
 266:driver/Core/core_cm4.h ****   struct
 267:driver/Core/core_cm4.h ****   {
 268:driver/Core/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 269:driver/Core/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 270:driver/Core/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 271:driver/Core/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 272:driver/Core/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 273:driver/Core/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 274:driver/Core/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 275:driver/Core/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 276:driver/Core/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 277:driver/Core/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 278:driver/Core/core_cm4.h **** } APSR_Type;
 279:driver/Core/core_cm4.h **** 
 280:driver/Core/core_cm4.h **** /* APSR Register Definitions */
 281:driver/Core/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 282:driver/Core/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 283:driver/Core/core_cm4.h **** 
 284:driver/Core/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 285:driver/Core/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 286:driver/Core/core_cm4.h **** 
 287:driver/Core/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 288:driver/Core/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 289:driver/Core/core_cm4.h **** 
 290:driver/Core/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 291:driver/Core/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 292:driver/Core/core_cm4.h **** 
 293:driver/Core/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 294:driver/Core/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 295:driver/Core/core_cm4.h **** 
ARM GAS  /tmp/cchXHjty.s 			page 36


 296:driver/Core/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 297:driver/Core/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 298:driver/Core/core_cm4.h **** 
 299:driver/Core/core_cm4.h **** 
 300:driver/Core/core_cm4.h **** /**
 301:driver/Core/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 302:driver/Core/core_cm4.h ****  */
 303:driver/Core/core_cm4.h **** typedef union
 304:driver/Core/core_cm4.h **** {
 305:driver/Core/core_cm4.h ****   struct
 306:driver/Core/core_cm4.h ****   {
 307:driver/Core/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 308:driver/Core/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 309:driver/Core/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 310:driver/Core/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 311:driver/Core/core_cm4.h **** } IPSR_Type;
 312:driver/Core/core_cm4.h **** 
 313:driver/Core/core_cm4.h **** /* IPSR Register Definitions */
 314:driver/Core/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 315:driver/Core/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 316:driver/Core/core_cm4.h **** 
 317:driver/Core/core_cm4.h **** 
 318:driver/Core/core_cm4.h **** /**
 319:driver/Core/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 320:driver/Core/core_cm4.h ****  */
 321:driver/Core/core_cm4.h **** typedef union
 322:driver/Core/core_cm4.h **** {
 323:driver/Core/core_cm4.h ****   struct
 324:driver/Core/core_cm4.h ****   {
 325:driver/Core/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 326:driver/Core/core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 327:driver/Core/core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 328:driver/Core/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 329:driver/Core/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 330:driver/Core/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 331:driver/Core/core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 332:driver/Core/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 333:driver/Core/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 334:driver/Core/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 335:driver/Core/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 336:driver/Core/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 337:driver/Core/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 338:driver/Core/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 339:driver/Core/core_cm4.h **** } xPSR_Type;
 340:driver/Core/core_cm4.h **** 
 341:driver/Core/core_cm4.h **** /* xPSR Register Definitions */
 342:driver/Core/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 343:driver/Core/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 344:driver/Core/core_cm4.h **** 
 345:driver/Core/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 346:driver/Core/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 347:driver/Core/core_cm4.h **** 
 348:driver/Core/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 349:driver/Core/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 350:driver/Core/core_cm4.h **** 
 351:driver/Core/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 352:driver/Core/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
ARM GAS  /tmp/cchXHjty.s 			page 37


 353:driver/Core/core_cm4.h **** 
 354:driver/Core/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 355:driver/Core/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 356:driver/Core/core_cm4.h **** 
 357:driver/Core/core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 358:driver/Core/core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 359:driver/Core/core_cm4.h **** 
 360:driver/Core/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 361:driver/Core/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 362:driver/Core/core_cm4.h **** 
 363:driver/Core/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 364:driver/Core/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 365:driver/Core/core_cm4.h **** 
 366:driver/Core/core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 367:driver/Core/core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 368:driver/Core/core_cm4.h **** 
 369:driver/Core/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 370:driver/Core/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 371:driver/Core/core_cm4.h **** 
 372:driver/Core/core_cm4.h **** 
 373:driver/Core/core_cm4.h **** /**
 374:driver/Core/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 375:driver/Core/core_cm4.h ****  */
 376:driver/Core/core_cm4.h **** typedef union
 377:driver/Core/core_cm4.h **** {
 378:driver/Core/core_cm4.h ****   struct
 379:driver/Core/core_cm4.h ****   {
 380:driver/Core/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 381:driver/Core/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 382:driver/Core/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 383:driver/Core/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 384:driver/Core/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 385:driver/Core/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 386:driver/Core/core_cm4.h **** } CONTROL_Type;
 387:driver/Core/core_cm4.h **** 
 388:driver/Core/core_cm4.h **** /* CONTROL Register Definitions */
 389:driver/Core/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 390:driver/Core/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 391:driver/Core/core_cm4.h **** 
 392:driver/Core/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 393:driver/Core/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 394:driver/Core/core_cm4.h **** 
 395:driver/Core/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 396:driver/Core/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 397:driver/Core/core_cm4.h **** 
 398:driver/Core/core_cm4.h **** /*@} end of group CMSIS_CORE */
 399:driver/Core/core_cm4.h **** 
 400:driver/Core/core_cm4.h **** 
 401:driver/Core/core_cm4.h **** /**
 402:driver/Core/core_cm4.h ****   \ingroup    CMSIS_core_register
 403:driver/Core/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 404:driver/Core/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 405:driver/Core/core_cm4.h ****   @{
 406:driver/Core/core_cm4.h ****  */
 407:driver/Core/core_cm4.h **** 
 408:driver/Core/core_cm4.h **** /**
 409:driver/Core/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
ARM GAS  /tmp/cchXHjty.s 			page 38


 410:driver/Core/core_cm4.h ****  */
 411:driver/Core/core_cm4.h **** typedef struct
 412:driver/Core/core_cm4.h **** {
 413:driver/Core/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 414:driver/Core/core_cm4.h ****         uint32_t RESERVED0[24U];
 415:driver/Core/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 416:driver/Core/core_cm4.h ****         uint32_t RESERVED1[24U];
 417:driver/Core/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 418:driver/Core/core_cm4.h ****         uint32_t RESERVED2[24U];
 419:driver/Core/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 420:driver/Core/core_cm4.h ****         uint32_t RESERVED3[24U];
 421:driver/Core/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 422:driver/Core/core_cm4.h ****         uint32_t RESERVED4[56U];
 423:driver/Core/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 424:driver/Core/core_cm4.h ****         uint32_t RESERVED5[644U];
 425:driver/Core/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 426:driver/Core/core_cm4.h **** }  NVIC_Type;
 427:driver/Core/core_cm4.h **** 
 428:driver/Core/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 429:driver/Core/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 430:driver/Core/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 431:driver/Core/core_cm4.h **** 
 432:driver/Core/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 433:driver/Core/core_cm4.h **** 
 434:driver/Core/core_cm4.h **** 
 435:driver/Core/core_cm4.h **** /**
 436:driver/Core/core_cm4.h ****   \ingroup  CMSIS_core_register
 437:driver/Core/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 438:driver/Core/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 439:driver/Core/core_cm4.h ****   @{
 440:driver/Core/core_cm4.h ****  */
 441:driver/Core/core_cm4.h **** 
 442:driver/Core/core_cm4.h **** /**
 443:driver/Core/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 444:driver/Core/core_cm4.h ****  */
 445:driver/Core/core_cm4.h **** typedef struct
 446:driver/Core/core_cm4.h **** {
 447:driver/Core/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 448:driver/Core/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 449:driver/Core/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 450:driver/Core/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 451:driver/Core/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 452:driver/Core/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 453:driver/Core/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 454:driver/Core/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 455:driver/Core/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 456:driver/Core/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 457:driver/Core/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 458:driver/Core/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 459:driver/Core/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 460:driver/Core/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 461:driver/Core/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 462:driver/Core/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 463:driver/Core/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 464:driver/Core/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 465:driver/Core/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 466:driver/Core/core_cm4.h ****         uint32_t RESERVED0[5U];
ARM GAS  /tmp/cchXHjty.s 			page 39


 467:driver/Core/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 468:driver/Core/core_cm4.h **** } SCB_Type;
 469:driver/Core/core_cm4.h **** 
 470:driver/Core/core_cm4.h **** /* SCB CPUID Register Definitions */
 471:driver/Core/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 472:driver/Core/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 473:driver/Core/core_cm4.h **** 
 474:driver/Core/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 475:driver/Core/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 476:driver/Core/core_cm4.h **** 
 477:driver/Core/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 478:driver/Core/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 479:driver/Core/core_cm4.h **** 
 480:driver/Core/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 481:driver/Core/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 482:driver/Core/core_cm4.h **** 
 483:driver/Core/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 484:driver/Core/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 485:driver/Core/core_cm4.h **** 
 486:driver/Core/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 487:driver/Core/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 488:driver/Core/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 489:driver/Core/core_cm4.h **** 
 490:driver/Core/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 491:driver/Core/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 492:driver/Core/core_cm4.h **** 
 493:driver/Core/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 494:driver/Core/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 495:driver/Core/core_cm4.h **** 
 496:driver/Core/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 497:driver/Core/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 498:driver/Core/core_cm4.h **** 
 499:driver/Core/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 500:driver/Core/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 501:driver/Core/core_cm4.h **** 
 502:driver/Core/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 503:driver/Core/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 504:driver/Core/core_cm4.h **** 
 505:driver/Core/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 506:driver/Core/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 507:driver/Core/core_cm4.h **** 
 508:driver/Core/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 509:driver/Core/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 510:driver/Core/core_cm4.h **** 
 511:driver/Core/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 512:driver/Core/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 513:driver/Core/core_cm4.h **** 
 514:driver/Core/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 515:driver/Core/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 516:driver/Core/core_cm4.h **** 
 517:driver/Core/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 518:driver/Core/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 519:driver/Core/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 520:driver/Core/core_cm4.h **** 
 521:driver/Core/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 522:driver/Core/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 523:driver/Core/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
ARM GAS  /tmp/cchXHjty.s 			page 40


 524:driver/Core/core_cm4.h **** 
 525:driver/Core/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 526:driver/Core/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 527:driver/Core/core_cm4.h **** 
 528:driver/Core/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 529:driver/Core/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 530:driver/Core/core_cm4.h **** 
 531:driver/Core/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 532:driver/Core/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 533:driver/Core/core_cm4.h **** 
 534:driver/Core/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 535:driver/Core/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 536:driver/Core/core_cm4.h **** 
 537:driver/Core/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 538:driver/Core/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 539:driver/Core/core_cm4.h **** 
 540:driver/Core/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 541:driver/Core/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 542:driver/Core/core_cm4.h **** 
 543:driver/Core/core_cm4.h **** /* SCB System Control Register Definitions */
 544:driver/Core/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 545:driver/Core/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 546:driver/Core/core_cm4.h **** 
 547:driver/Core/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 548:driver/Core/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 549:driver/Core/core_cm4.h **** 
 550:driver/Core/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 551:driver/Core/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 552:driver/Core/core_cm4.h **** 
 553:driver/Core/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 554:driver/Core/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 555:driver/Core/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 556:driver/Core/core_cm4.h **** 
 557:driver/Core/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 558:driver/Core/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 559:driver/Core/core_cm4.h **** 
 560:driver/Core/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 561:driver/Core/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 562:driver/Core/core_cm4.h **** 
 563:driver/Core/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 564:driver/Core/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 565:driver/Core/core_cm4.h **** 
 566:driver/Core/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 567:driver/Core/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 568:driver/Core/core_cm4.h **** 
 569:driver/Core/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 570:driver/Core/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 571:driver/Core/core_cm4.h **** 
 572:driver/Core/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 573:driver/Core/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 574:driver/Core/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 575:driver/Core/core_cm4.h **** 
 576:driver/Core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 577:driver/Core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 578:driver/Core/core_cm4.h **** 
 579:driver/Core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 580:driver/Core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
ARM GAS  /tmp/cchXHjty.s 			page 41


 581:driver/Core/core_cm4.h **** 
 582:driver/Core/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 583:driver/Core/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 584:driver/Core/core_cm4.h **** 
 585:driver/Core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 586:driver/Core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 587:driver/Core/core_cm4.h **** 
 588:driver/Core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 589:driver/Core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 590:driver/Core/core_cm4.h **** 
 591:driver/Core/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 592:driver/Core/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 593:driver/Core/core_cm4.h **** 
 594:driver/Core/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 595:driver/Core/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 596:driver/Core/core_cm4.h **** 
 597:driver/Core/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 598:driver/Core/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 599:driver/Core/core_cm4.h **** 
 600:driver/Core/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 601:driver/Core/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 602:driver/Core/core_cm4.h **** 
 603:driver/Core/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 604:driver/Core/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 605:driver/Core/core_cm4.h **** 
 606:driver/Core/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 607:driver/Core/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 608:driver/Core/core_cm4.h **** 
 609:driver/Core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 610:driver/Core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 611:driver/Core/core_cm4.h **** 
 612:driver/Core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 613:driver/Core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 614:driver/Core/core_cm4.h **** 
 615:driver/Core/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 616:driver/Core/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 617:driver/Core/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 618:driver/Core/core_cm4.h **** 
 619:driver/Core/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 620:driver/Core/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 621:driver/Core/core_cm4.h **** 
 622:driver/Core/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 623:driver/Core/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 624:driver/Core/core_cm4.h **** 
 625:driver/Core/core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 626:driver/Core/core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_CFSR_MEMFAULTSR_Pos + 7U)                 /*!< SCB 
 627:driver/Core/core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 628:driver/Core/core_cm4.h **** 
 629:driver/Core/core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_CFSR_MEMFAULTSR_Pos + 5U)                 /*!< SCB 
 630:driver/Core/core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 631:driver/Core/core_cm4.h **** 
 632:driver/Core/core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_CFSR_MEMFAULTSR_Pos + 4U)                 /*!< SCB 
 633:driver/Core/core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 634:driver/Core/core_cm4.h **** 
 635:driver/Core/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_CFSR_MEMFAULTSR_Pos + 3U)                 /*!< SCB 
 636:driver/Core/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 637:driver/Core/core_cm4.h **** 
ARM GAS  /tmp/cchXHjty.s 			page 42


 638:driver/Core/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_CFSR_MEMFAULTSR_Pos + 1U)                 /*!< SCB 
 639:driver/Core/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 640:driver/Core/core_cm4.h **** 
 641:driver/Core/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_CFSR_MEMFAULTSR_Pos + 0U)                 /*!< SCB 
 642:driver/Core/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 643:driver/Core/core_cm4.h **** 
 644:driver/Core/core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 645:driver/Core/core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 646:driver/Core/core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 647:driver/Core/core_cm4.h **** 
 648:driver/Core/core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 649:driver/Core/core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 650:driver/Core/core_cm4.h **** 
 651:driver/Core/core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 652:driver/Core/core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 653:driver/Core/core_cm4.h **** 
 654:driver/Core/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 655:driver/Core/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 656:driver/Core/core_cm4.h **** 
 657:driver/Core/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 658:driver/Core/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 659:driver/Core/core_cm4.h **** 
 660:driver/Core/core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 661:driver/Core/core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 662:driver/Core/core_cm4.h **** 
 663:driver/Core/core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 664:driver/Core/core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 665:driver/Core/core_cm4.h **** 
 666:driver/Core/core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 667:driver/Core/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 668:driver/Core/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 669:driver/Core/core_cm4.h **** 
 670:driver/Core/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 671:driver/Core/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 672:driver/Core/core_cm4.h **** 
 673:driver/Core/core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 674:driver/Core/core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 675:driver/Core/core_cm4.h **** 
 676:driver/Core/core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 677:driver/Core/core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 678:driver/Core/core_cm4.h **** 
 679:driver/Core/core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 680:driver/Core/core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 681:driver/Core/core_cm4.h **** 
 682:driver/Core/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 683:driver/Core/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 684:driver/Core/core_cm4.h **** 
 685:driver/Core/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 686:driver/Core/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 687:driver/Core/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 688:driver/Core/core_cm4.h **** 
 689:driver/Core/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 690:driver/Core/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 691:driver/Core/core_cm4.h **** 
 692:driver/Core/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 693:driver/Core/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 694:driver/Core/core_cm4.h **** 
ARM GAS  /tmp/cchXHjty.s 			page 43


 695:driver/Core/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 696:driver/Core/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 697:driver/Core/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 698:driver/Core/core_cm4.h **** 
 699:driver/Core/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 700:driver/Core/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 701:driver/Core/core_cm4.h **** 
 702:driver/Core/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 703:driver/Core/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 704:driver/Core/core_cm4.h **** 
 705:driver/Core/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 706:driver/Core/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 707:driver/Core/core_cm4.h **** 
 708:driver/Core/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 709:driver/Core/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 710:driver/Core/core_cm4.h **** 
 711:driver/Core/core_cm4.h **** /*@} end of group CMSIS_SCB */
 712:driver/Core/core_cm4.h **** 
 713:driver/Core/core_cm4.h **** 
 714:driver/Core/core_cm4.h **** /**
 715:driver/Core/core_cm4.h ****   \ingroup  CMSIS_core_register
 716:driver/Core/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 717:driver/Core/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 718:driver/Core/core_cm4.h ****   @{
 719:driver/Core/core_cm4.h ****  */
 720:driver/Core/core_cm4.h **** 
 721:driver/Core/core_cm4.h **** /**
 722:driver/Core/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 723:driver/Core/core_cm4.h ****  */
 724:driver/Core/core_cm4.h **** typedef struct
 725:driver/Core/core_cm4.h **** {
 726:driver/Core/core_cm4.h ****         uint32_t RESERVED0[1U];
 727:driver/Core/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 728:driver/Core/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 729:driver/Core/core_cm4.h **** } SCnSCB_Type;
 730:driver/Core/core_cm4.h **** 
 731:driver/Core/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 732:driver/Core/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 733:driver/Core/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 734:driver/Core/core_cm4.h **** 
 735:driver/Core/core_cm4.h **** /* Auxiliary Control Register Definitions */
 736:driver/Core/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 737:driver/Core/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 738:driver/Core/core_cm4.h **** 
 739:driver/Core/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 740:driver/Core/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 741:driver/Core/core_cm4.h **** 
 742:driver/Core/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 743:driver/Core/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 744:driver/Core/core_cm4.h **** 
 745:driver/Core/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 746:driver/Core/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 747:driver/Core/core_cm4.h **** 
 748:driver/Core/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 749:driver/Core/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 750:driver/Core/core_cm4.h **** 
 751:driver/Core/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
ARM GAS  /tmp/cchXHjty.s 			page 44


 752:driver/Core/core_cm4.h **** 
 753:driver/Core/core_cm4.h **** 
 754:driver/Core/core_cm4.h **** /**
 755:driver/Core/core_cm4.h ****   \ingroup  CMSIS_core_register
 756:driver/Core/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 757:driver/Core/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 758:driver/Core/core_cm4.h ****   @{
 759:driver/Core/core_cm4.h ****  */
 760:driver/Core/core_cm4.h **** 
 761:driver/Core/core_cm4.h **** /**
 762:driver/Core/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 763:driver/Core/core_cm4.h ****  */
 764:driver/Core/core_cm4.h **** typedef struct
 765:driver/Core/core_cm4.h **** {
 766:driver/Core/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 767:driver/Core/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 768:driver/Core/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 769:driver/Core/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 770:driver/Core/core_cm4.h **** } SysTick_Type;
 771:driver/Core/core_cm4.h **** 
 772:driver/Core/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 773:driver/Core/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 774:driver/Core/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 775:driver/Core/core_cm4.h **** 
 776:driver/Core/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 777:driver/Core/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 778:driver/Core/core_cm4.h **** 
 779:driver/Core/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 780:driver/Core/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 781:driver/Core/core_cm4.h **** 
 782:driver/Core/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 783:driver/Core/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 784:driver/Core/core_cm4.h **** 
 785:driver/Core/core_cm4.h **** /* SysTick Reload Register Definitions */
 786:driver/Core/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 787:driver/Core/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 788:driver/Core/core_cm4.h **** 
 789:driver/Core/core_cm4.h **** /* SysTick Current Register Definitions */
 790:driver/Core/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 791:driver/Core/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 792:driver/Core/core_cm4.h **** 
 793:driver/Core/core_cm4.h **** /* SysTick Calibration Register Definitions */
 794:driver/Core/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 795:driver/Core/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 796:driver/Core/core_cm4.h **** 
 797:driver/Core/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 798:driver/Core/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 799:driver/Core/core_cm4.h **** 
 800:driver/Core/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 801:driver/Core/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 802:driver/Core/core_cm4.h **** 
 803:driver/Core/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 804:driver/Core/core_cm4.h **** 
 805:driver/Core/core_cm4.h **** 
 806:driver/Core/core_cm4.h **** /**
 807:driver/Core/core_cm4.h ****   \ingroup  CMSIS_core_register
 808:driver/Core/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
ARM GAS  /tmp/cchXHjty.s 			page 45


 809:driver/Core/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 810:driver/Core/core_cm4.h ****   @{
 811:driver/Core/core_cm4.h ****  */
 812:driver/Core/core_cm4.h **** 
 813:driver/Core/core_cm4.h **** /**
 814:driver/Core/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 815:driver/Core/core_cm4.h ****  */
 816:driver/Core/core_cm4.h **** typedef struct
 817:driver/Core/core_cm4.h **** {
 818:driver/Core/core_cm4.h ****   __OM  union
 819:driver/Core/core_cm4.h ****   {
 820:driver/Core/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 821:driver/Core/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 822:driver/Core/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 823:driver/Core/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 824:driver/Core/core_cm4.h ****         uint32_t RESERVED0[864U];
 825:driver/Core/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 826:driver/Core/core_cm4.h ****         uint32_t RESERVED1[15U];
 827:driver/Core/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 828:driver/Core/core_cm4.h ****         uint32_t RESERVED2[15U];
 829:driver/Core/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 830:driver/Core/core_cm4.h ****         uint32_t RESERVED3[32U];
 831:driver/Core/core_cm4.h ****         uint32_t RESERVED4[43U];
 832:driver/Core/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 833:driver/Core/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 834:driver/Core/core_cm4.h ****         uint32_t RESERVED5[6U];
 835:driver/Core/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 836:driver/Core/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 837:driver/Core/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 838:driver/Core/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 839:driver/Core/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 840:driver/Core/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 841:driver/Core/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 842:driver/Core/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 843:driver/Core/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 844:driver/Core/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 845:driver/Core/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 846:driver/Core/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 847:driver/Core/core_cm4.h **** } ITM_Type;
 848:driver/Core/core_cm4.h **** 
 849:driver/Core/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 850:driver/Core/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 851:driver/Core/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 852:driver/Core/core_cm4.h **** 
 853:driver/Core/core_cm4.h **** /* ITM Trace Control Register Definitions */
 854:driver/Core/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 855:driver/Core/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 856:driver/Core/core_cm4.h **** 
 857:driver/Core/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 858:driver/Core/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 859:driver/Core/core_cm4.h **** 
 860:driver/Core/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 861:driver/Core/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 862:driver/Core/core_cm4.h **** 
 863:driver/Core/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 864:driver/Core/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 865:driver/Core/core_cm4.h **** 
ARM GAS  /tmp/cchXHjty.s 			page 46


 866:driver/Core/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 867:driver/Core/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 868:driver/Core/core_cm4.h **** 
 869:driver/Core/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 870:driver/Core/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 871:driver/Core/core_cm4.h **** 
 872:driver/Core/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 873:driver/Core/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 874:driver/Core/core_cm4.h **** 
 875:driver/Core/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 876:driver/Core/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 877:driver/Core/core_cm4.h **** 
 878:driver/Core/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 879:driver/Core/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 880:driver/Core/core_cm4.h **** 
 881:driver/Core/core_cm4.h **** /* ITM Lock Status Register Definitions */
 882:driver/Core/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 883:driver/Core/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 884:driver/Core/core_cm4.h **** 
 885:driver/Core/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 886:driver/Core/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 887:driver/Core/core_cm4.h **** 
 888:driver/Core/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 889:driver/Core/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 890:driver/Core/core_cm4.h **** 
 891:driver/Core/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 892:driver/Core/core_cm4.h **** 
 893:driver/Core/core_cm4.h **** 
 894:driver/Core/core_cm4.h **** /**
 895:driver/Core/core_cm4.h ****   \ingroup  CMSIS_core_register
 896:driver/Core/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 897:driver/Core/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 898:driver/Core/core_cm4.h ****   @{
 899:driver/Core/core_cm4.h ****  */
 900:driver/Core/core_cm4.h **** 
 901:driver/Core/core_cm4.h **** /**
 902:driver/Core/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 903:driver/Core/core_cm4.h ****  */
 904:driver/Core/core_cm4.h **** typedef struct
 905:driver/Core/core_cm4.h **** {
 906:driver/Core/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 907:driver/Core/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 908:driver/Core/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 909:driver/Core/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 910:driver/Core/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 911:driver/Core/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 912:driver/Core/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 913:driver/Core/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 914:driver/Core/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 915:driver/Core/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 916:driver/Core/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 917:driver/Core/core_cm4.h ****         uint32_t RESERVED0[1U];
 918:driver/Core/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 919:driver/Core/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 920:driver/Core/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 921:driver/Core/core_cm4.h ****         uint32_t RESERVED1[1U];
 922:driver/Core/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
ARM GAS  /tmp/cchXHjty.s 			page 47


 923:driver/Core/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 924:driver/Core/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 925:driver/Core/core_cm4.h ****         uint32_t RESERVED2[1U];
 926:driver/Core/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 927:driver/Core/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 928:driver/Core/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 929:driver/Core/core_cm4.h **** } DWT_Type;
 930:driver/Core/core_cm4.h **** 
 931:driver/Core/core_cm4.h **** /* DWT Control Register Definitions */
 932:driver/Core/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 933:driver/Core/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 934:driver/Core/core_cm4.h **** 
 935:driver/Core/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 936:driver/Core/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 937:driver/Core/core_cm4.h **** 
 938:driver/Core/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 939:driver/Core/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 940:driver/Core/core_cm4.h **** 
 941:driver/Core/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 942:driver/Core/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 943:driver/Core/core_cm4.h **** 
 944:driver/Core/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 945:driver/Core/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 946:driver/Core/core_cm4.h **** 
 947:driver/Core/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 948:driver/Core/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 949:driver/Core/core_cm4.h **** 
 950:driver/Core/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 951:driver/Core/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 952:driver/Core/core_cm4.h **** 
 953:driver/Core/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 954:driver/Core/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 955:driver/Core/core_cm4.h **** 
 956:driver/Core/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 957:driver/Core/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 958:driver/Core/core_cm4.h **** 
 959:driver/Core/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 960:driver/Core/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 961:driver/Core/core_cm4.h **** 
 962:driver/Core/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 963:driver/Core/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 964:driver/Core/core_cm4.h **** 
 965:driver/Core/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 966:driver/Core/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 967:driver/Core/core_cm4.h **** 
 968:driver/Core/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 969:driver/Core/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 970:driver/Core/core_cm4.h **** 
 971:driver/Core/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 972:driver/Core/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 973:driver/Core/core_cm4.h **** 
 974:driver/Core/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 975:driver/Core/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 976:driver/Core/core_cm4.h **** 
 977:driver/Core/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 978:driver/Core/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 979:driver/Core/core_cm4.h **** 
ARM GAS  /tmp/cchXHjty.s 			page 48


 980:driver/Core/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 981:driver/Core/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 982:driver/Core/core_cm4.h **** 
 983:driver/Core/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 984:driver/Core/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 985:driver/Core/core_cm4.h **** 
 986:driver/Core/core_cm4.h **** /* DWT CPI Count Register Definitions */
 987:driver/Core/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 988:driver/Core/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 989:driver/Core/core_cm4.h **** 
 990:driver/Core/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 991:driver/Core/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 992:driver/Core/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 993:driver/Core/core_cm4.h **** 
 994:driver/Core/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 995:driver/Core/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 996:driver/Core/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 997:driver/Core/core_cm4.h **** 
 998:driver/Core/core_cm4.h **** /* DWT LSU Count Register Definitions */
 999:driver/Core/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1000:driver/Core/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1001:driver/Core/core_cm4.h **** 
1002:driver/Core/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
1003:driver/Core/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1004:driver/Core/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1005:driver/Core/core_cm4.h **** 
1006:driver/Core/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1007:driver/Core/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1008:driver/Core/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1009:driver/Core/core_cm4.h **** 
1010:driver/Core/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1011:driver/Core/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1012:driver/Core/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1013:driver/Core/core_cm4.h **** 
1014:driver/Core/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1015:driver/Core/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1016:driver/Core/core_cm4.h **** 
1017:driver/Core/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1018:driver/Core/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1019:driver/Core/core_cm4.h **** 
1020:driver/Core/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1021:driver/Core/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1022:driver/Core/core_cm4.h **** 
1023:driver/Core/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1024:driver/Core/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1025:driver/Core/core_cm4.h **** 
1026:driver/Core/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1027:driver/Core/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1028:driver/Core/core_cm4.h **** 
1029:driver/Core/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1030:driver/Core/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1031:driver/Core/core_cm4.h **** 
1032:driver/Core/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1033:driver/Core/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1034:driver/Core/core_cm4.h **** 
1035:driver/Core/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1036:driver/Core/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
ARM GAS  /tmp/cchXHjty.s 			page 49


1037:driver/Core/core_cm4.h **** 
1038:driver/Core/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1039:driver/Core/core_cm4.h **** 
1040:driver/Core/core_cm4.h **** 
1041:driver/Core/core_cm4.h **** /**
1042:driver/Core/core_cm4.h ****   \ingroup  CMSIS_core_register
1043:driver/Core/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1044:driver/Core/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1045:driver/Core/core_cm4.h ****   @{
1046:driver/Core/core_cm4.h ****  */
1047:driver/Core/core_cm4.h **** 
1048:driver/Core/core_cm4.h **** /**
1049:driver/Core/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1050:driver/Core/core_cm4.h ****  */
1051:driver/Core/core_cm4.h **** typedef struct
1052:driver/Core/core_cm4.h **** {
1053:driver/Core/core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1054:driver/Core/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1055:driver/Core/core_cm4.h ****         uint32_t RESERVED0[2U];
1056:driver/Core/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1057:driver/Core/core_cm4.h ****         uint32_t RESERVED1[55U];
1058:driver/Core/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1059:driver/Core/core_cm4.h ****         uint32_t RESERVED2[131U];
1060:driver/Core/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1061:driver/Core/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1062:driver/Core/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1063:driver/Core/core_cm4.h ****         uint32_t RESERVED3[759U];
1064:driver/Core/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1065:driver/Core/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1066:driver/Core/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1067:driver/Core/core_cm4.h ****         uint32_t RESERVED4[1U];
1068:driver/Core/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1069:driver/Core/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1070:driver/Core/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1071:driver/Core/core_cm4.h ****         uint32_t RESERVED5[39U];
1072:driver/Core/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1073:driver/Core/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1074:driver/Core/core_cm4.h ****         uint32_t RESERVED7[8U];
1075:driver/Core/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1076:driver/Core/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1077:driver/Core/core_cm4.h **** } TPI_Type;
1078:driver/Core/core_cm4.h **** 
1079:driver/Core/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1080:driver/Core/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1081:driver/Core/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1082:driver/Core/core_cm4.h **** 
1083:driver/Core/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1084:driver/Core/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1085:driver/Core/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1086:driver/Core/core_cm4.h **** 
1087:driver/Core/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1088:driver/Core/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1089:driver/Core/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1090:driver/Core/core_cm4.h **** 
1091:driver/Core/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1092:driver/Core/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1093:driver/Core/core_cm4.h **** 
ARM GAS  /tmp/cchXHjty.s 			page 50


1094:driver/Core/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1095:driver/Core/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1096:driver/Core/core_cm4.h **** 
1097:driver/Core/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1098:driver/Core/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1099:driver/Core/core_cm4.h **** 
1100:driver/Core/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1101:driver/Core/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1102:driver/Core/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1103:driver/Core/core_cm4.h **** 
1104:driver/Core/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1105:driver/Core/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1106:driver/Core/core_cm4.h **** 
1107:driver/Core/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1108:driver/Core/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1109:driver/Core/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1110:driver/Core/core_cm4.h **** 
1111:driver/Core/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1112:driver/Core/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1113:driver/Core/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1114:driver/Core/core_cm4.h **** 
1115:driver/Core/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1116:driver/Core/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1117:driver/Core/core_cm4.h **** 
1118:driver/Core/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1119:driver/Core/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1120:driver/Core/core_cm4.h **** 
1121:driver/Core/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1122:driver/Core/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1123:driver/Core/core_cm4.h **** 
1124:driver/Core/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1125:driver/Core/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1126:driver/Core/core_cm4.h **** 
1127:driver/Core/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1128:driver/Core/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1129:driver/Core/core_cm4.h **** 
1130:driver/Core/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1131:driver/Core/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1132:driver/Core/core_cm4.h **** 
1133:driver/Core/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1134:driver/Core/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1135:driver/Core/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1136:driver/Core/core_cm4.h **** 
1137:driver/Core/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1138:driver/Core/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1139:driver/Core/core_cm4.h **** 
1140:driver/Core/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1141:driver/Core/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1142:driver/Core/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1143:driver/Core/core_cm4.h **** 
1144:driver/Core/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1145:driver/Core/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1146:driver/Core/core_cm4.h **** 
1147:driver/Core/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1148:driver/Core/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1149:driver/Core/core_cm4.h **** 
1150:driver/Core/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
ARM GAS  /tmp/cchXHjty.s 			page 51


1151:driver/Core/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1152:driver/Core/core_cm4.h **** 
1153:driver/Core/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1154:driver/Core/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1155:driver/Core/core_cm4.h **** 
1156:driver/Core/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1157:driver/Core/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1158:driver/Core/core_cm4.h **** 
1159:driver/Core/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1160:driver/Core/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1161:driver/Core/core_cm4.h **** 
1162:driver/Core/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1163:driver/Core/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1164:driver/Core/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1165:driver/Core/core_cm4.h **** 
1166:driver/Core/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1167:driver/Core/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1168:driver/Core/core_cm4.h **** 
1169:driver/Core/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1170:driver/Core/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1171:driver/Core/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1172:driver/Core/core_cm4.h **** 
1173:driver/Core/core_cm4.h **** /* TPI DEVID Register Definitions */
1174:driver/Core/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1175:driver/Core/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1176:driver/Core/core_cm4.h **** 
1177:driver/Core/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1178:driver/Core/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1179:driver/Core/core_cm4.h **** 
1180:driver/Core/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1181:driver/Core/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1182:driver/Core/core_cm4.h **** 
1183:driver/Core/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1184:driver/Core/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1185:driver/Core/core_cm4.h **** 
1186:driver/Core/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1187:driver/Core/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1188:driver/Core/core_cm4.h **** 
1189:driver/Core/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1190:driver/Core/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1191:driver/Core/core_cm4.h **** 
1192:driver/Core/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1193:driver/Core/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1194:driver/Core/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1195:driver/Core/core_cm4.h **** 
1196:driver/Core/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1197:driver/Core/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1198:driver/Core/core_cm4.h **** 
1199:driver/Core/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1200:driver/Core/core_cm4.h **** 
1201:driver/Core/core_cm4.h **** 
1202:driver/Core/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1203:driver/Core/core_cm4.h **** /**
1204:driver/Core/core_cm4.h ****   \ingroup  CMSIS_core_register
1205:driver/Core/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1206:driver/Core/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1207:driver/Core/core_cm4.h ****   @{
ARM GAS  /tmp/cchXHjty.s 			page 52


1208:driver/Core/core_cm4.h ****  */
1209:driver/Core/core_cm4.h **** 
1210:driver/Core/core_cm4.h **** /**
1211:driver/Core/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1212:driver/Core/core_cm4.h ****  */
1213:driver/Core/core_cm4.h **** typedef struct
1214:driver/Core/core_cm4.h **** {
1215:driver/Core/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1216:driver/Core/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1217:driver/Core/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1218:driver/Core/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1219:driver/Core/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1220:driver/Core/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1221:driver/Core/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1222:driver/Core/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1223:driver/Core/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1224:driver/Core/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1225:driver/Core/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1226:driver/Core/core_cm4.h **** } MPU_Type;
1227:driver/Core/core_cm4.h **** 
1228:driver/Core/core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1229:driver/Core/core_cm4.h **** 
1230:driver/Core/core_cm4.h **** /* MPU Type Register Definitions */
1231:driver/Core/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1232:driver/Core/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1233:driver/Core/core_cm4.h **** 
1234:driver/Core/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1235:driver/Core/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1236:driver/Core/core_cm4.h **** 
1237:driver/Core/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1238:driver/Core/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1239:driver/Core/core_cm4.h **** 
1240:driver/Core/core_cm4.h **** /* MPU Control Register Definitions */
1241:driver/Core/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1242:driver/Core/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1243:driver/Core/core_cm4.h **** 
1244:driver/Core/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1245:driver/Core/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1246:driver/Core/core_cm4.h **** 
1247:driver/Core/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1248:driver/Core/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1249:driver/Core/core_cm4.h **** 
1250:driver/Core/core_cm4.h **** /* MPU Region Number Register Definitions */
1251:driver/Core/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1252:driver/Core/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1253:driver/Core/core_cm4.h **** 
1254:driver/Core/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1255:driver/Core/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1256:driver/Core/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1257:driver/Core/core_cm4.h **** 
1258:driver/Core/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1259:driver/Core/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1260:driver/Core/core_cm4.h **** 
1261:driver/Core/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1262:driver/Core/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1263:driver/Core/core_cm4.h **** 
1264:driver/Core/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
ARM GAS  /tmp/cchXHjty.s 			page 53


1265:driver/Core/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1266:driver/Core/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1267:driver/Core/core_cm4.h **** 
1268:driver/Core/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1269:driver/Core/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1270:driver/Core/core_cm4.h **** 
1271:driver/Core/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1272:driver/Core/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1273:driver/Core/core_cm4.h **** 
1274:driver/Core/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1275:driver/Core/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1276:driver/Core/core_cm4.h **** 
1277:driver/Core/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1278:driver/Core/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1279:driver/Core/core_cm4.h **** 
1280:driver/Core/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1281:driver/Core/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1282:driver/Core/core_cm4.h **** 
1283:driver/Core/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1284:driver/Core/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1285:driver/Core/core_cm4.h **** 
1286:driver/Core/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1287:driver/Core/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1288:driver/Core/core_cm4.h **** 
1289:driver/Core/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1290:driver/Core/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1291:driver/Core/core_cm4.h **** 
1292:driver/Core/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1293:driver/Core/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1294:driver/Core/core_cm4.h **** 
1295:driver/Core/core_cm4.h **** /*@} end of group CMSIS_MPU */
1296:driver/Core/core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1297:driver/Core/core_cm4.h **** 
1298:driver/Core/core_cm4.h **** 
1299:driver/Core/core_cm4.h **** /**
1300:driver/Core/core_cm4.h ****   \ingroup  CMSIS_core_register
1301:driver/Core/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1302:driver/Core/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1303:driver/Core/core_cm4.h ****   @{
1304:driver/Core/core_cm4.h ****  */
1305:driver/Core/core_cm4.h **** 
1306:driver/Core/core_cm4.h **** /**
1307:driver/Core/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1308:driver/Core/core_cm4.h ****  */
1309:driver/Core/core_cm4.h **** typedef struct
1310:driver/Core/core_cm4.h **** {
1311:driver/Core/core_cm4.h ****         uint32_t RESERVED0[1U];
1312:driver/Core/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1313:driver/Core/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1314:driver/Core/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1315:driver/Core/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1316:driver/Core/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1317:driver/Core/core_cm4.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1318:driver/Core/core_cm4.h **** } FPU_Type;
1319:driver/Core/core_cm4.h **** 
1320:driver/Core/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1321:driver/Core/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
ARM GAS  /tmp/cchXHjty.s 			page 54


1322:driver/Core/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1323:driver/Core/core_cm4.h **** 
1324:driver/Core/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1325:driver/Core/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1326:driver/Core/core_cm4.h **** 
1327:driver/Core/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1328:driver/Core/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1329:driver/Core/core_cm4.h **** 
1330:driver/Core/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1331:driver/Core/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1332:driver/Core/core_cm4.h **** 
1333:driver/Core/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1334:driver/Core/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1335:driver/Core/core_cm4.h **** 
1336:driver/Core/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1337:driver/Core/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1338:driver/Core/core_cm4.h **** 
1339:driver/Core/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1340:driver/Core/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1341:driver/Core/core_cm4.h **** 
1342:driver/Core/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1343:driver/Core/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1344:driver/Core/core_cm4.h **** 
1345:driver/Core/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1346:driver/Core/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1347:driver/Core/core_cm4.h **** 
1348:driver/Core/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1349:driver/Core/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1350:driver/Core/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1351:driver/Core/core_cm4.h **** 
1352:driver/Core/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1353:driver/Core/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1354:driver/Core/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1355:driver/Core/core_cm4.h **** 
1356:driver/Core/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1357:driver/Core/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1358:driver/Core/core_cm4.h **** 
1359:driver/Core/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1360:driver/Core/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1361:driver/Core/core_cm4.h **** 
1362:driver/Core/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1363:driver/Core/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1364:driver/Core/core_cm4.h **** 
1365:driver/Core/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1366:driver/Core/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1367:driver/Core/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1368:driver/Core/core_cm4.h **** 
1369:driver/Core/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1370:driver/Core/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1371:driver/Core/core_cm4.h **** 
1372:driver/Core/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1373:driver/Core/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1374:driver/Core/core_cm4.h **** 
1375:driver/Core/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1376:driver/Core/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1377:driver/Core/core_cm4.h **** 
1378:driver/Core/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
ARM GAS  /tmp/cchXHjty.s 			page 55


1379:driver/Core/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1380:driver/Core/core_cm4.h **** 
1381:driver/Core/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1382:driver/Core/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1383:driver/Core/core_cm4.h **** 
1384:driver/Core/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1385:driver/Core/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1386:driver/Core/core_cm4.h **** 
1387:driver/Core/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1388:driver/Core/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1389:driver/Core/core_cm4.h **** 
1390:driver/Core/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1391:driver/Core/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1392:driver/Core/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1393:driver/Core/core_cm4.h **** 
1394:driver/Core/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1395:driver/Core/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1396:driver/Core/core_cm4.h **** 
1397:driver/Core/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1398:driver/Core/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1399:driver/Core/core_cm4.h **** 
1400:driver/Core/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1401:driver/Core/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1402:driver/Core/core_cm4.h **** 
1403:driver/Core/core_cm4.h **** /* Media and FP Feature Register 2 Definitions */
1404:driver/Core/core_cm4.h **** 
1405:driver/Core/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1406:driver/Core/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1407:driver/Core/core_cm4.h **** 
1408:driver/Core/core_cm4.h **** /*@} end of group CMSIS_FPU */
1409:driver/Core/core_cm4.h **** 
1410:driver/Core/core_cm4.h **** 
1411:driver/Core/core_cm4.h **** /**
1412:driver/Core/core_cm4.h ****   \ingroup  CMSIS_core_register
1413:driver/Core/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1414:driver/Core/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1415:driver/Core/core_cm4.h ****   @{
1416:driver/Core/core_cm4.h ****  */
1417:driver/Core/core_cm4.h **** 
1418:driver/Core/core_cm4.h **** /**
1419:driver/Core/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1420:driver/Core/core_cm4.h ****  */
1421:driver/Core/core_cm4.h **** typedef struct
1422:driver/Core/core_cm4.h **** {
1423:driver/Core/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1424:driver/Core/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1425:driver/Core/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1426:driver/Core/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1427:driver/Core/core_cm4.h **** } CoreDebug_Type;
1428:driver/Core/core_cm4.h **** 
1429:driver/Core/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1430:driver/Core/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1431:driver/Core/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1432:driver/Core/core_cm4.h **** 
1433:driver/Core/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1434:driver/Core/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1435:driver/Core/core_cm4.h **** 
ARM GAS  /tmp/cchXHjty.s 			page 56


1436:driver/Core/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1437:driver/Core/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1438:driver/Core/core_cm4.h **** 
1439:driver/Core/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1440:driver/Core/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1441:driver/Core/core_cm4.h **** 
1442:driver/Core/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1443:driver/Core/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1444:driver/Core/core_cm4.h **** 
1445:driver/Core/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1446:driver/Core/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1447:driver/Core/core_cm4.h **** 
1448:driver/Core/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1449:driver/Core/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1450:driver/Core/core_cm4.h **** 
1451:driver/Core/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1452:driver/Core/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1453:driver/Core/core_cm4.h **** 
1454:driver/Core/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1455:driver/Core/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1456:driver/Core/core_cm4.h **** 
1457:driver/Core/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1458:driver/Core/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1459:driver/Core/core_cm4.h **** 
1460:driver/Core/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1461:driver/Core/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1462:driver/Core/core_cm4.h **** 
1463:driver/Core/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1464:driver/Core/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1465:driver/Core/core_cm4.h **** 
1466:driver/Core/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1467:driver/Core/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1468:driver/Core/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1469:driver/Core/core_cm4.h **** 
1470:driver/Core/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1471:driver/Core/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1472:driver/Core/core_cm4.h **** 
1473:driver/Core/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1474:driver/Core/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1475:driver/Core/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1476:driver/Core/core_cm4.h **** 
1477:driver/Core/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1478:driver/Core/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1479:driver/Core/core_cm4.h **** 
1480:driver/Core/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1481:driver/Core/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1482:driver/Core/core_cm4.h **** 
1483:driver/Core/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1484:driver/Core/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1485:driver/Core/core_cm4.h **** 
1486:driver/Core/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1487:driver/Core/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1488:driver/Core/core_cm4.h **** 
1489:driver/Core/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1490:driver/Core/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1491:driver/Core/core_cm4.h **** 
1492:driver/Core/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
ARM GAS  /tmp/cchXHjty.s 			page 57


1493:driver/Core/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1494:driver/Core/core_cm4.h **** 
1495:driver/Core/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1496:driver/Core/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1497:driver/Core/core_cm4.h **** 
1498:driver/Core/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1499:driver/Core/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1500:driver/Core/core_cm4.h **** 
1501:driver/Core/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1502:driver/Core/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1503:driver/Core/core_cm4.h **** 
1504:driver/Core/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1505:driver/Core/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1506:driver/Core/core_cm4.h **** 
1507:driver/Core/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1508:driver/Core/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1509:driver/Core/core_cm4.h **** 
1510:driver/Core/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1511:driver/Core/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1512:driver/Core/core_cm4.h **** 
1513:driver/Core/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1514:driver/Core/core_cm4.h **** 
1515:driver/Core/core_cm4.h **** 
1516:driver/Core/core_cm4.h **** /**
1517:driver/Core/core_cm4.h ****   \ingroup    CMSIS_core_register
1518:driver/Core/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1519:driver/Core/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1520:driver/Core/core_cm4.h ****   @{
1521:driver/Core/core_cm4.h ****  */
1522:driver/Core/core_cm4.h **** 
1523:driver/Core/core_cm4.h **** /**
1524:driver/Core/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1525:driver/Core/core_cm4.h ****   \param[in] field  Name of the register bit field.
1526:driver/Core/core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1527:driver/Core/core_cm4.h ****   \return           Masked and shifted value.
1528:driver/Core/core_cm4.h **** */
1529:driver/Core/core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1530:driver/Core/core_cm4.h **** 
1531:driver/Core/core_cm4.h **** /**
1532:driver/Core/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1533:driver/Core/core_cm4.h ****   \param[in] field  Name of the register bit field.
1534:driver/Core/core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1535:driver/Core/core_cm4.h ****   \return           Masked and shifted bit field value.
1536:driver/Core/core_cm4.h **** */
1537:driver/Core/core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1538:driver/Core/core_cm4.h **** 
1539:driver/Core/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1540:driver/Core/core_cm4.h **** 
1541:driver/Core/core_cm4.h **** 
1542:driver/Core/core_cm4.h **** /**
1543:driver/Core/core_cm4.h ****   \ingroup    CMSIS_core_register
1544:driver/Core/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1545:driver/Core/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1546:driver/Core/core_cm4.h ****   @{
1547:driver/Core/core_cm4.h ****  */
1548:driver/Core/core_cm4.h **** 
1549:driver/Core/core_cm4.h **** /* Memory mapping of Core Hardware */
ARM GAS  /tmp/cchXHjty.s 			page 58


1550:driver/Core/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1551:driver/Core/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1552:driver/Core/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1553:driver/Core/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1554:driver/Core/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1555:driver/Core/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1556:driver/Core/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1557:driver/Core/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1558:driver/Core/core_cm4.h **** 
1559:driver/Core/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1560:driver/Core/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1561:driver/Core/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1562:driver/Core/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1563:driver/Core/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1564:driver/Core/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1565:driver/Core/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1566:driver/Core/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1567:driver/Core/core_cm4.h **** 
1568:driver/Core/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1569:driver/Core/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1570:driver/Core/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1571:driver/Core/core_cm4.h **** #endif
1572:driver/Core/core_cm4.h **** 
1573:driver/Core/core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1574:driver/Core/core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1575:driver/Core/core_cm4.h **** 
1576:driver/Core/core_cm4.h **** /*@} */
1577:driver/Core/core_cm4.h **** 
1578:driver/Core/core_cm4.h **** 
1579:driver/Core/core_cm4.h **** 
1580:driver/Core/core_cm4.h **** /*******************************************************************************
1581:driver/Core/core_cm4.h ****  *                Hardware Abstraction Layer
1582:driver/Core/core_cm4.h ****   Core Function Interface contains:
1583:driver/Core/core_cm4.h ****   - Core NVIC Functions
1584:driver/Core/core_cm4.h ****   - Core SysTick Functions
1585:driver/Core/core_cm4.h ****   - Core Debug Functions
1586:driver/Core/core_cm4.h ****   - Core Register Access Functions
1587:driver/Core/core_cm4.h ****  ******************************************************************************/
1588:driver/Core/core_cm4.h **** /**
1589:driver/Core/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1590:driver/Core/core_cm4.h **** */
1591:driver/Core/core_cm4.h **** 
1592:driver/Core/core_cm4.h **** 
1593:driver/Core/core_cm4.h **** 
1594:driver/Core/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1595:driver/Core/core_cm4.h **** /**
1596:driver/Core/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1597:driver/Core/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1598:driver/Core/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1599:driver/Core/core_cm4.h ****   @{
1600:driver/Core/core_cm4.h ****  */
1601:driver/Core/core_cm4.h **** 
1602:driver/Core/core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1603:driver/Core/core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1604:driver/Core/core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1605:driver/Core/core_cm4.h ****   #endif
1606:driver/Core/core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
ARM GAS  /tmp/cchXHjty.s 			page 59


1607:driver/Core/core_cm4.h **** #else
1608:driver/Core/core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1609:driver/Core/core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1610:driver/Core/core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1611:driver/Core/core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1612:driver/Core/core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1613:driver/Core/core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1614:driver/Core/core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1615:driver/Core/core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1616:driver/Core/core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1617:driver/Core/core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1618:driver/Core/core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1619:driver/Core/core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1620:driver/Core/core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1621:driver/Core/core_cm4.h **** 
1622:driver/Core/core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1623:driver/Core/core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1624:driver/Core/core_cm4.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1625:driver/Core/core_cm4.h ****   #endif
1626:driver/Core/core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1627:driver/Core/core_cm4.h **** #else
1628:driver/Core/core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1629:driver/Core/core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1630:driver/Core/core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1631:driver/Core/core_cm4.h **** 
1632:driver/Core/core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1633:driver/Core/core_cm4.h **** 
1634:driver/Core/core_cm4.h **** 
1635:driver/Core/core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1636:driver/Core/core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1637:driver/Core/core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1638:driver/Core/core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1639:driver/Core/core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1640:driver/Core/core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1641:driver/Core/core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1642:driver/Core/core_cm4.h **** 
1643:driver/Core/core_cm4.h **** 
1644:driver/Core/core_cm4.h **** /**
1645:driver/Core/core_cm4.h ****   \brief   Set Priority Grouping
1646:driver/Core/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1647:driver/Core/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1648:driver/Core/core_cm4.h ****            Only values from 0..7 are used.
1649:driver/Core/core_cm4.h ****            In case of a conflict between priority grouping and available
1650:driver/Core/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1651:driver/Core/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1652:driver/Core/core_cm4.h ****  */
1653:driver/Core/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1654:driver/Core/core_cm4.h **** {
1655:driver/Core/core_cm4.h ****   uint32_t reg_value;
1656:driver/Core/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1657:driver/Core/core_cm4.h **** 
1658:driver/Core/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1659:driver/Core/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1660:driver/Core/core_cm4.h ****   reg_value  =  (reg_value                                   |
1661:driver/Core/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1662:driver/Core/core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1663:driver/Core/core_cm4.h ****   SCB->AIRCR =  reg_value;
ARM GAS  /tmp/cchXHjty.s 			page 60


1664:driver/Core/core_cm4.h **** }
1665:driver/Core/core_cm4.h **** 
1666:driver/Core/core_cm4.h **** 
1667:driver/Core/core_cm4.h **** /**
1668:driver/Core/core_cm4.h ****   \brief   Get Priority Grouping
1669:driver/Core/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1670:driver/Core/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1671:driver/Core/core_cm4.h ****  */
1672:driver/Core/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1673:driver/Core/core_cm4.h **** {
1674:driver/Core/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1675:driver/Core/core_cm4.h **** }
1676:driver/Core/core_cm4.h **** 
1677:driver/Core/core_cm4.h **** 
1678:driver/Core/core_cm4.h **** /**
1679:driver/Core/core_cm4.h ****   \brief   Enable Interrupt
1680:driver/Core/core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1681:driver/Core/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1682:driver/Core/core_cm4.h ****   \note    IRQn must not be negative.
1683:driver/Core/core_cm4.h ****  */
1684:driver/Core/core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1685:driver/Core/core_cm4.h **** {
1686:driver/Core/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1687:driver/Core/core_cm4.h ****   {
1688:driver/Core/core_cm4.h ****     __COMPILER_BARRIER();
1689:driver/Core/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1690:driver/Core/core_cm4.h ****     __COMPILER_BARRIER();
1691:driver/Core/core_cm4.h ****   }
1692:driver/Core/core_cm4.h **** }
1693:driver/Core/core_cm4.h **** 
1694:driver/Core/core_cm4.h **** 
1695:driver/Core/core_cm4.h **** /**
1696:driver/Core/core_cm4.h ****   \brief   Get Interrupt Enable status
1697:driver/Core/core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1698:driver/Core/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1699:driver/Core/core_cm4.h ****   \return             0  Interrupt is not enabled.
1700:driver/Core/core_cm4.h ****   \return             1  Interrupt is enabled.
1701:driver/Core/core_cm4.h ****   \note    IRQn must not be negative.
1702:driver/Core/core_cm4.h ****  */
1703:driver/Core/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1704:driver/Core/core_cm4.h **** {
1705:driver/Core/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1706:driver/Core/core_cm4.h ****   {
1707:driver/Core/core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1708:driver/Core/core_cm4.h ****   }
1709:driver/Core/core_cm4.h ****   else
1710:driver/Core/core_cm4.h ****   {
1711:driver/Core/core_cm4.h ****     return(0U);
1712:driver/Core/core_cm4.h ****   }
1713:driver/Core/core_cm4.h **** }
1714:driver/Core/core_cm4.h **** 
1715:driver/Core/core_cm4.h **** 
1716:driver/Core/core_cm4.h **** /**
1717:driver/Core/core_cm4.h ****   \brief   Disable Interrupt
1718:driver/Core/core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1719:driver/Core/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1720:driver/Core/core_cm4.h ****   \note    IRQn must not be negative.
ARM GAS  /tmp/cchXHjty.s 			page 61


1721:driver/Core/core_cm4.h ****  */
1722:driver/Core/core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1723:driver/Core/core_cm4.h **** {
1724:driver/Core/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1725:driver/Core/core_cm4.h ****   {
1726:driver/Core/core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1727:driver/Core/core_cm4.h ****     __DSB();
1728:driver/Core/core_cm4.h ****     __ISB();
1729:driver/Core/core_cm4.h ****   }
1730:driver/Core/core_cm4.h **** }
1731:driver/Core/core_cm4.h **** 
1732:driver/Core/core_cm4.h **** 
1733:driver/Core/core_cm4.h **** /**
1734:driver/Core/core_cm4.h ****   \brief   Get Pending Interrupt
1735:driver/Core/core_cm4.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1736:driver/Core/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1737:driver/Core/core_cm4.h ****   \return             0  Interrupt status is not pending.
1738:driver/Core/core_cm4.h ****   \return             1  Interrupt status is pending.
1739:driver/Core/core_cm4.h ****   \note    IRQn must not be negative.
1740:driver/Core/core_cm4.h ****  */
1741:driver/Core/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1742:driver/Core/core_cm4.h **** {
1743:driver/Core/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1744:driver/Core/core_cm4.h ****   {
1745:driver/Core/core_cm4.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1746:driver/Core/core_cm4.h ****   }
1747:driver/Core/core_cm4.h ****   else
1748:driver/Core/core_cm4.h ****   {
1749:driver/Core/core_cm4.h ****     return(0U);
1750:driver/Core/core_cm4.h ****   }
1751:driver/Core/core_cm4.h **** }
1752:driver/Core/core_cm4.h **** 
1753:driver/Core/core_cm4.h **** 
1754:driver/Core/core_cm4.h **** /**
1755:driver/Core/core_cm4.h ****   \brief   Set Pending Interrupt
1756:driver/Core/core_cm4.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1757:driver/Core/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1758:driver/Core/core_cm4.h ****   \note    IRQn must not be negative.
1759:driver/Core/core_cm4.h ****  */
1760:driver/Core/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1761:driver/Core/core_cm4.h **** {
1762:driver/Core/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1763:driver/Core/core_cm4.h ****   {
1764:driver/Core/core_cm4.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1765:driver/Core/core_cm4.h ****   }
1766:driver/Core/core_cm4.h **** }
1767:driver/Core/core_cm4.h **** 
1768:driver/Core/core_cm4.h **** 
1769:driver/Core/core_cm4.h **** /**
1770:driver/Core/core_cm4.h ****   \brief   Clear Pending Interrupt
1771:driver/Core/core_cm4.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1772:driver/Core/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1773:driver/Core/core_cm4.h ****   \note    IRQn must not be negative.
1774:driver/Core/core_cm4.h ****  */
1775:driver/Core/core_cm4.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1776:driver/Core/core_cm4.h **** {
1777:driver/Core/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
ARM GAS  /tmp/cchXHjty.s 			page 62


1778:driver/Core/core_cm4.h ****   {
1779:driver/Core/core_cm4.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1780:driver/Core/core_cm4.h ****   }
1781:driver/Core/core_cm4.h **** }
1782:driver/Core/core_cm4.h **** 
1783:driver/Core/core_cm4.h **** 
1784:driver/Core/core_cm4.h **** /**
1785:driver/Core/core_cm4.h ****   \brief   Get Active Interrupt
1786:driver/Core/core_cm4.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1787:driver/Core/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1788:driver/Core/core_cm4.h ****   \return             0  Interrupt status is not active.
1789:driver/Core/core_cm4.h ****   \return             1  Interrupt status is active.
1790:driver/Core/core_cm4.h ****   \note    IRQn must not be negative.
1791:driver/Core/core_cm4.h ****  */
1792:driver/Core/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1793:driver/Core/core_cm4.h **** {
1794:driver/Core/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1795:driver/Core/core_cm4.h ****   {
1796:driver/Core/core_cm4.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1797:driver/Core/core_cm4.h ****   }
1798:driver/Core/core_cm4.h ****   else
1799:driver/Core/core_cm4.h ****   {
1800:driver/Core/core_cm4.h ****     return(0U);
1801:driver/Core/core_cm4.h ****   }
1802:driver/Core/core_cm4.h **** }
1803:driver/Core/core_cm4.h **** 
1804:driver/Core/core_cm4.h **** 
1805:driver/Core/core_cm4.h **** /**
1806:driver/Core/core_cm4.h ****   \brief   Set Interrupt Priority
1807:driver/Core/core_cm4.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1808:driver/Core/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1809:driver/Core/core_cm4.h ****            or negative to specify a processor exception.
1810:driver/Core/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1811:driver/Core/core_cm4.h ****   \param [in]  priority  Priority to set.
1812:driver/Core/core_cm4.h ****   \note    The priority cannot be set for every processor exception.
1813:driver/Core/core_cm4.h ****  */
1814:driver/Core/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1815:driver/Core/core_cm4.h **** {
1816:driver/Core/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1817:driver/Core/core_cm4.h ****   {
1818:driver/Core/core_cm4.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1819:driver/Core/core_cm4.h ****   }
1820:driver/Core/core_cm4.h ****   else
1821:driver/Core/core_cm4.h ****   {
1822:driver/Core/core_cm4.h ****     SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1823:driver/Core/core_cm4.h ****   }
1824:driver/Core/core_cm4.h **** }
1825:driver/Core/core_cm4.h **** 
1826:driver/Core/core_cm4.h **** 
1827:driver/Core/core_cm4.h **** /**
1828:driver/Core/core_cm4.h ****   \brief   Get Interrupt Priority
1829:driver/Core/core_cm4.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
1830:driver/Core/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1831:driver/Core/core_cm4.h ****            or negative to specify a processor exception.
1832:driver/Core/core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1833:driver/Core/core_cm4.h ****   \return             Interrupt Priority.
1834:driver/Core/core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
ARM GAS  /tmp/cchXHjty.s 			page 63


1835:driver/Core/core_cm4.h ****  */
1836:driver/Core/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
1837:driver/Core/core_cm4.h **** {
1838:driver/Core/core_cm4.h **** 
1839:driver/Core/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1840:driver/Core/core_cm4.h ****   {
1841:driver/Core/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS)));
1842:driver/Core/core_cm4.h ****   }
1843:driver/Core/core_cm4.h ****   else
1844:driver/Core/core_cm4.h ****   {
1845:driver/Core/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
1846:driver/Core/core_cm4.h ****   }
1847:driver/Core/core_cm4.h **** }
1848:driver/Core/core_cm4.h **** 
1849:driver/Core/core_cm4.h **** 
1850:driver/Core/core_cm4.h **** /**
1851:driver/Core/core_cm4.h ****   \brief   Encode Priority
1852:driver/Core/core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1853:driver/Core/core_cm4.h ****            preemptive priority value, and subpriority value.
1854:driver/Core/core_cm4.h ****            In case of a conflict between priority grouping and available
1855:driver/Core/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1856:driver/Core/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1857:driver/Core/core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1858:driver/Core/core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1859:driver/Core/core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1860:driver/Core/core_cm4.h ****  */
1861:driver/Core/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1862:driver/Core/core_cm4.h **** {
1863:driver/Core/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1864:driver/Core/core_cm4.h ****   uint32_t PreemptPriorityBits;
1865:driver/Core/core_cm4.h ****   uint32_t SubPriorityBits;
1866:driver/Core/core_cm4.h **** 
1867:driver/Core/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1868:driver/Core/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1869:driver/Core/core_cm4.h **** 
1870:driver/Core/core_cm4.h ****   return (
1871:driver/Core/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
1872:driver/Core/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
1873:driver/Core/core_cm4.h ****          );
1874:driver/Core/core_cm4.h **** }
1875:driver/Core/core_cm4.h **** 
1876:driver/Core/core_cm4.h **** 
1877:driver/Core/core_cm4.h **** /**
1878:driver/Core/core_cm4.h ****   \brief   Decode Priority
1879:driver/Core/core_cm4.h ****   \details Decodes an interrupt priority value with a given priority group to
1880:driver/Core/core_cm4.h ****            preemptive priority value and subpriority value.
1881:driver/Core/core_cm4.h ****            In case of a conflict between priority grouping and available
1882:driver/Core/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1883:driver/Core/core_cm4.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1884:driver/Core/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1885:driver/Core/core_cm4.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1886:driver/Core/core_cm4.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1887:driver/Core/core_cm4.h ****  */
1888:driver/Core/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1889:driver/Core/core_cm4.h **** {
1890:driver/Core/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1891:driver/Core/core_cm4.h ****   uint32_t PreemptPriorityBits;
ARM GAS  /tmp/cchXHjty.s 			page 64


1892:driver/Core/core_cm4.h ****   uint32_t SubPriorityBits;
1893:driver/Core/core_cm4.h **** 
1894:driver/Core/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1895:driver/Core/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1896:driver/Core/core_cm4.h **** 
1897:driver/Core/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1898:driver/Core/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1899:driver/Core/core_cm4.h **** }
1900:driver/Core/core_cm4.h **** 
1901:driver/Core/core_cm4.h **** 
1902:driver/Core/core_cm4.h **** /**
1903:driver/Core/core_cm4.h ****   \brief   Set Interrupt Vector
1904:driver/Core/core_cm4.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
1905:driver/Core/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1906:driver/Core/core_cm4.h ****            or negative to specify a processor exception.
1907:driver/Core/core_cm4.h ****            VTOR must been relocated to SRAM before.
1908:driver/Core/core_cm4.h ****   \param [in]   IRQn      Interrupt number
1909:driver/Core/core_cm4.h ****   \param [in]   vector    Address of interrupt handler function
1910:driver/Core/core_cm4.h ****  */
1911:driver/Core/core_cm4.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
1912:driver/Core/core_cm4.h **** {
1913:driver/Core/core_cm4.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
1914:driver/Core/core_cm4.h ****   vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET] = vector;
1915:driver/Core/core_cm4.h ****   /* ARM Application Note 321 states that the M4 does not require the architectural barrier */
1916:driver/Core/core_cm4.h **** }
1917:driver/Core/core_cm4.h **** 
1918:driver/Core/core_cm4.h **** 
1919:driver/Core/core_cm4.h **** /**
1920:driver/Core/core_cm4.h ****   \brief   Get Interrupt Vector
1921:driver/Core/core_cm4.h ****   \details Reads an interrupt vector from interrupt vector table.
1922:driver/Core/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1923:driver/Core/core_cm4.h ****            or negative to specify a processor exception.
1924:driver/Core/core_cm4.h ****   \param [in]   IRQn      Interrupt number.
1925:driver/Core/core_cm4.h ****   \return                 Address of interrupt handler function
1926:driver/Core/core_cm4.h ****  */
1927:driver/Core/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
1928:driver/Core/core_cm4.h **** {
1929:driver/Core/core_cm4.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
1930:driver/Core/core_cm4.h ****   return vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET];
1931:driver/Core/core_cm4.h **** }
1932:driver/Core/core_cm4.h **** 
1933:driver/Core/core_cm4.h **** 
1934:driver/Core/core_cm4.h **** /**
1935:driver/Core/core_cm4.h ****   \brief   System Reset
1936:driver/Core/core_cm4.h ****   \details Initiates a system reset request to reset the MCU.
1937:driver/Core/core_cm4.h ****  */
1938:driver/Core/core_cm4.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
1939:driver/Core/core_cm4.h **** {
1940:driver/Core/core_cm4.h ****   __DSB();                                                          /* Ensure all outstanding memor
1941:driver/Core/core_cm4.h ****                                                                        buffered write are completed
1942:driver/Core/core_cm4.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
1943:driver/Core/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
1944:driver/Core/core_cm4.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1945:driver/Core/core_cm4.h ****   __DSB();                                                          /* Ensure completion of memory 
1946:driver/Core/core_cm4.h **** 
1947:driver/Core/core_cm4.h ****   for(;;)                                                           /* wait until reset */
1948:driver/Core/core_cm4.h ****   {
ARM GAS  /tmp/cchXHjty.s 			page 65


1949:driver/Core/core_cm4.h ****     __NOP();
1950:driver/Core/core_cm4.h ****   }
1951:driver/Core/core_cm4.h **** }
1952:driver/Core/core_cm4.h **** 
1953:driver/Core/core_cm4.h **** /*@} end of CMSIS_Core_NVICFunctions */
1954:driver/Core/core_cm4.h **** 
1955:driver/Core/core_cm4.h **** 
1956:driver/Core/core_cm4.h **** /* ##########################  MPU functions  #################################### */
1957:driver/Core/core_cm4.h **** 
1958:driver/Core/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1959:driver/Core/core_cm4.h **** 
1960:driver/Core/core_cm4.h **** #include "mpu_armv7.h"
1961:driver/Core/core_cm4.h **** 
1962:driver/Core/core_cm4.h **** #endif
1963:driver/Core/core_cm4.h **** 
1964:driver/Core/core_cm4.h **** 
1965:driver/Core/core_cm4.h **** /* ##########################  FPU functions  #################################### */
1966:driver/Core/core_cm4.h **** /**
1967:driver/Core/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1968:driver/Core/core_cm4.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
1969:driver/Core/core_cm4.h ****   \brief    Function that provides FPU type.
1970:driver/Core/core_cm4.h ****   @{
1971:driver/Core/core_cm4.h ****  */
1972:driver/Core/core_cm4.h **** 
1973:driver/Core/core_cm4.h **** /**
1974:driver/Core/core_cm4.h ****   \brief   get FPU type
1975:driver/Core/core_cm4.h ****   \details returns the FPU type
1976:driver/Core/core_cm4.h ****   \returns
1977:driver/Core/core_cm4.h ****    - \b  0: No FPU
1978:driver/Core/core_cm4.h ****    - \b  1: Single precision FPU
1979:driver/Core/core_cm4.h ****    - \b  2: Double + Single precision FPU
1980:driver/Core/core_cm4.h ****  */
1981:driver/Core/core_cm4.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
1982:driver/Core/core_cm4.h **** {
1983:driver/Core/core_cm4.h ****   uint32_t mvfr0;
1984:driver/Core/core_cm4.h **** 
1985:driver/Core/core_cm4.h ****   mvfr0 = FPU->MVFR0;
1986:driver/Core/core_cm4.h ****   if      ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x020U)
1987:driver/Core/core_cm4.h ****   {
1988:driver/Core/core_cm4.h ****     return 1U;           /* Single precision FPU */
1989:driver/Core/core_cm4.h ****   }
1990:driver/Core/core_cm4.h ****   else
1991:driver/Core/core_cm4.h ****   {
1992:driver/Core/core_cm4.h ****     return 0U;           /* No FPU */
1993:driver/Core/core_cm4.h ****   }
1994:driver/Core/core_cm4.h **** }
1995:driver/Core/core_cm4.h **** 
1996:driver/Core/core_cm4.h **** 
1997:driver/Core/core_cm4.h **** /*@} end of CMSIS_Core_FpuFunctions */
1998:driver/Core/core_cm4.h **** 
1999:driver/Core/core_cm4.h **** 
2000:driver/Core/core_cm4.h **** 
2001:driver/Core/core_cm4.h **** /* ##################################    SysTick function  ########################################
2002:driver/Core/core_cm4.h **** /**
2003:driver/Core/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
2004:driver/Core/core_cm4.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
2005:driver/Core/core_cm4.h ****   \brief    Functions that configure the System.
ARM GAS  /tmp/cchXHjty.s 			page 66


2006:driver/Core/core_cm4.h ****   @{
2007:driver/Core/core_cm4.h ****  */
2008:driver/Core/core_cm4.h **** 
2009:driver/Core/core_cm4.h **** #if defined (__Vendor_SysTickConfig) && (__Vendor_SysTickConfig == 0U)
2010:driver/Core/core_cm4.h **** 
2011:driver/Core/core_cm4.h **** /**
2012:driver/Core/core_cm4.h ****   \brief   System Tick Configuration
2013:driver/Core/core_cm4.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
2014:driver/Core/core_cm4.h ****            Counter is in free running mode to generate periodic interrupts.
2015:driver/Core/core_cm4.h ****   \param [in]  ticks  Number of ticks between two interrupts.
2016:driver/Core/core_cm4.h ****   \return          0  Function succeeded.
2017:driver/Core/core_cm4.h ****   \return          1  Function failed.
2018:driver/Core/core_cm4.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
2019:driver/Core/core_cm4.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
2020:driver/Core/core_cm4.h ****            must contain a vendor-specific implementation of this function.
2021:driver/Core/core_cm4.h ****  */
2022:driver/Core/core_cm4.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
 515              		.loc 3 2022 26 view .LVU115
 516              	.LBB19:
2023:driver/Core/core_cm4.h **** {
2024:driver/Core/core_cm4.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 517              		.loc 3 2024 3 view .LVU116
2025:driver/Core/core_cm4.h ****   {
2026:driver/Core/core_cm4.h ****     return (1UL);                                                   /* Reload value impossible */
2027:driver/Core/core_cm4.h ****   }
2028:driver/Core/core_cm4.h **** 
2029:driver/Core/core_cm4.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 518              		.loc 3 2029 3 view .LVU117
 519              		.loc 3 2029 18 is_stmt 0 view .LVU118
 520 0000 4FF0E023 		mov	r3, #-536813568
 521 0004 4AF20F42 		movw	r2, #41999
 522 0008 5A61     		str	r2, [r3, #20]
2030:driver/Core/core_cm4.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
 523              		.loc 3 2030 3 is_stmt 1 view .LVU119
 524              	.LVL30:
 525              	.LBB20:
 526              	.LBI20:
1814:driver/Core/core_cm4.h **** {
 527              		.loc 3 1814 22 view .LVU120
 528              	.LBB21:
1816:driver/Core/core_cm4.h ****   {
 529              		.loc 3 1816 3 view .LVU121
1822:driver/Core/core_cm4.h ****   }
 530              		.loc 3 1822 5 view .LVU122
1822:driver/Core/core_cm4.h ****   }
 531              		.loc 3 1822 46 is_stmt 0 view .LVU123
 532 000a 044A     		ldr	r2, .L41
 533 000c F021     		movs	r1, #240
 534 000e 82F82310 		strb	r1, [r2, #35]
 535              	.LVL31:
1822:driver/Core/core_cm4.h ****   }
 536              		.loc 3 1822 46 view .LVU124
 537              	.LBE21:
 538              	.LBE20:
2031:driver/Core/core_cm4.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 539              		.loc 3 2031 3 is_stmt 1 view .LVU125
 540              		.loc 3 2031 18 is_stmt 0 view .LVU126
ARM GAS  /tmp/cchXHjty.s 			page 67


 541 0012 0022     		movs	r2, #0
 542 0014 9A61     		str	r2, [r3, #24]
2032:driver/Core/core_cm4.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 543              		.loc 3 2032 3 is_stmt 1 view .LVU127
 544              		.loc 3 2032 18 is_stmt 0 view .LVU128
 545 0016 0722     		movs	r2, #7
 546 0018 1A61     		str	r2, [r3, #16]
2033:driver/Core/core_cm4.h ****                    SysTick_CTRL_TICKINT_Msk   |
2034:driver/Core/core_cm4.h ****                    SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTi
2035:driver/Core/core_cm4.h ****   return (0UL);                                                     /* Function successful */
 547              		.loc 3 2035 3 is_stmt 1 view .LVU129
 548              	.LVL32:
 549              	.L40:
 550              		.loc 3 2035 3 is_stmt 0 view .LVU130
 551              	.LBE19:
 552              	.LBE18:
 153:src/scheduler.c **** 
 154:src/scheduler.c **** 	while (1);
 553              		.loc 1 154 2 is_stmt 1 discriminator 1 view .LVU131
 554              		.loc 1 154 11 discriminator 1 view .LVU132
 555              		.loc 1 154 8 discriminator 1 view .LVU133
 556 001a FEE7     		b	.L40
 557              	.L42:
 558              		.align	2
 559              	.L41:
 560 001c 00ED00E0 		.word	-536810240
 561              		.cfi_endproc
 562              	.LFE144:
 564              		.section	.text.start_scheduler,"ax",%progbits
 565              		.align	1
 566              		.global	start_scheduler
 567              		.syntax unified
 568              		.thumb
 569              		.thumb_func
 570              		.fpu fpv4-sp-d16
 572              	start_scheduler:
 573              	.LFB145:
 155:src/scheduler.c **** }
 156:src/scheduler.c **** 
 157:src/scheduler.c **** /*********************************** Function to start scheduling task ****************************
 158:src/scheduler.c **** void start_scheduler(void)
 159:src/scheduler.c **** {
 574              		.loc 1 159 1 view -0
 575              		.cfi_startproc
 576              		@ Volatile: function does not return.
 577              		@ args = 0, pretend = 0, frame = 0
 578              		@ frame_needed = 0, uses_anonymous_args = 0
 579 0000 08B5     		push	{r3, lr}
 580              	.LCFI9:
 581              		.cfi_def_cfa_offset 8
 582              		.cfi_offset 3, -8
 583              		.cfi_offset 14, -4
 160:src/scheduler.c ****     NVIC_SetPriority(PendSV_IRQn, 0xFF);					// set PendSV IRQ in low priority
 584              		.loc 1 160 5 view .LVU135
 585              	.LVL33:
 586              	.LBB22:
 587              	.LBI22:
ARM GAS  /tmp/cchXHjty.s 			page 68


1814:driver/Core/core_cm4.h **** {
 588              		.loc 3 1814 22 view .LVU136
 589              	.LBB23:
1816:driver/Core/core_cm4.h ****   {
 590              		.loc 3 1816 3 view .LVU137
1822:driver/Core/core_cm4.h ****   }
 591              		.loc 3 1822 5 view .LVU138
1822:driver/Core/core_cm4.h ****   }
 592              		.loc 3 1822 46 is_stmt 0 view .LVU139
 593 0002 0D4B     		ldr	r3, .L45
 594 0004 F022     		movs	r2, #240
 595 0006 83F82220 		strb	r2, [r3, #34]
 596              	.LVL34:
1822:driver/Core/core_cm4.h ****   }
 597              		.loc 3 1822 46 view .LVU140
 598              	.LBE23:
 599              	.LBE22:
 161:src/scheduler.c **** 
 162:src/scheduler.c **** 	create_idle_task();							// create idle task
 600              		.loc 1 162 2 is_stmt 1 view .LVU141
 601 000a FFF7FEFF 		bl	create_idle_task
 602              	.LVL35:
 163:src/scheduler.c **** 
 164:src/scheduler.c **** 	__ASM volatile("MOV r0, %0" :: "r" (idle_task->psp));	// move idle task stack address to r0
 603              		.loc 1 164 2 view .LVU142
 604              		.loc 1 164 47 is_stmt 0 view .LVU143
 605 000e 0B4B     		ldr	r3, .L45+4
 606 0010 1B68     		ldr	r3, [r3]
 607 0012 DB68     		ldr	r3, [r3, #12]
 608              		.loc 1 164 2 view .LVU144
 609              		.syntax unified
 610              	@ 164 "src/scheduler.c" 1
 611 0014 1846     		MOV r0, r3
 612              	@ 0 "" 2
 165:src/scheduler.c **** 	__ASM volatile("LDMIA r0!, {r4-r11}");					// pop saved dummy context from task stack to r4-r11
 613              		.loc 1 165 2 is_stmt 1 view .LVU145
 614              	@ 165 "src/scheduler.c" 1
 615 0016 B0E8F00F 		LDMIA r0!, {r4-r11}
 616              	@ 0 "" 2
 166:src/scheduler.c **** 	__ASM volatile("MOV r4, r0");
 617              		.loc 1 166 2 view .LVU146
 618              	@ 166 "src/scheduler.c" 1
 619 001a 0446     		MOV r4, r0
 620              	@ 0 "" 2
 167:src/scheduler.c **** 	__ASM volatile("LDMIA r4!, {r0-r3}");
 621              		.loc 1 167 2 view .LVU147
 622              	@ 167 "src/scheduler.c" 1
 623 001c 0FCC     		LDMIA r4!, {r0-r3}
 624              	@ 0 "" 2
 168:src/scheduler.c **** 	__ASM volatile("LDMIA r4!, {r12}");
 625              		.loc 1 168 2 view .LVU148
 626              	@ 168 "src/scheduler.c" 1
 627 001e 54F804CB 		LDMIA r4!, {r12}
 628              	@ 0 "" 2
 169:src/scheduler.c **** 	__ASM volatile("MSR psp, r4");						// update psp
 629              		.loc 1 169 2 view .LVU149
 630              	@ 169 "src/scheduler.c" 1
ARM GAS  /tmp/cchXHjty.s 			page 69


 631 0022 84F30988 		MSR psp, r4
 632              	@ 0 "" 2
 170:src/scheduler.c **** 
 171:src/scheduler.c **** 	__ASM volatile("MOV r0, #2");
 633              		.loc 1 171 2 view .LVU150
 634              	@ 171 "src/scheduler.c" 1
 635 0026 4FF00200 		MOV r0, #2
 636              	@ 0 "" 2
 172:src/scheduler.c **** 	__ASM volatile("MSR control, r0");				// set cpu in unprivileged mode						
 637              		.loc 1 172 2 view .LVU151
 638              	@ 172 "src/scheduler.c" 1
 639 002a 80F31488 		MSR control, r0
 640              	@ 0 "" 2
 173:src/scheduler.c **** 	__ASM volatile ("isb 0xF":::"memory");			// instruction sync block
 641              		.loc 1 173 2 view .LVU152
 642              	@ 173 "src/scheduler.c" 1
 643 002e BFF36F8F 		isb 0xF
 644              	@ 0 "" 2
 174:src/scheduler.c **** 
 175:src/scheduler.c **** 	idleTask();								// run idle task first
 645              		.loc 1 175 2 view .LVU153
 646              		.thumb
 647              		.syntax unified
 648 0032 FFF7FEFF 		bl	idleTask
 649              	.LVL36:
 650              	.L46:
 651 0036 00BF     		.align	2
 652              	.L45:
 653 0038 00ED00E0 		.word	-536810240
 654 003c 00000000 		.word	idle_task
 655              		.cfi_endproc
 656              	.LFE145:
 658              		.global	stack_ptr
 659              		.global	next_task
 660              		.section	.bss.next_task,"aw",%nobits
 661              		.align	2
 662              		.set	.LANCHOR1,. + 0
 665              	next_task:
 666 0000 00000000 		.space	4
 667              		.section	.bss.stack_ptr,"aw",%nobits
 668              		.align	2
 669              		.set	.LANCHOR0,. + 0
 672              	stack_ptr:
 673 0000 00000000 		.space	4
 674              		.text
 675              	.Letext0:
 676              		.file 4 "driver/Device/stm32f401xc.h"
 677              		.file 5 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 678              		.file 6 "inc/task.h"
ARM GAS  /tmp/cchXHjty.s 			page 70


DEFINED SYMBOLS
                            *ABS*:0000000000000000 scheduler.c
     /tmp/cchXHjty.s:18     .text.set_PendSV:0000000000000000 $t
     /tmp/cchXHjty.s:25     .text.set_PendSV:0000000000000000 set_PendSV
     /tmp/cchXHjty.s:44     .text.set_PendSV:000000000000000c $d
     /tmp/cchXHjty.s:49     .text.update_task_delay:0000000000000000 $t
     /tmp/cchXHjty.s:55     .text.update_task_delay:0000000000000000 update_task_delay
     /tmp/cchXHjty.s:142    .text.update_task_delay:000000000000003c $d
     /tmp/cchXHjty.s:147    .text.getCurrentTask:0000000000000000 $t
     /tmp/cchXHjty.s:154    .text.getCurrentTask:0000000000000000 getCurrentTask
     /tmp/cchXHjty.s:177    .text.switch_task:0000000000000000 $t
     /tmp/cchXHjty.s:184    .text.switch_task:0000000000000000 switch_task
     /tmp/cchXHjty.s:289    .text.switch_task:0000000000000044 $d
     /tmp/cchXHjty.s:297    .text.PendSV_Handler:0000000000000000 $t
     /tmp/cchXHjty.s:304    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/cchXHjty.s:372    .text.PendSV_Handler:000000000000002c $d
     /tmp/cchXHjty.s:377    .text.task_delay:0000000000000000 $t
     /tmp/cchXHjty.s:384    .text.task_delay:0000000000000000 task_delay
     /tmp/cchXHjty.s:465    .text.SysTick_Handler:0000000000000000 $t
     /tmp/cchXHjty.s:472    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/cchXHjty.s:495    .text.idleTask:0000000000000000 $t
     /tmp/cchXHjty.s:502    .text.idleTask:0000000000000000 idleTask
     /tmp/cchXHjty.s:560    .text.idleTask:000000000000001c $d
     /tmp/cchXHjty.s:565    .text.start_scheduler:0000000000000000 $t
     /tmp/cchXHjty.s:572    .text.start_scheduler:0000000000000000 start_scheduler
     /tmp/cchXHjty.s:653    .text.start_scheduler:0000000000000038 $d
     /tmp/cchXHjty.s:672    .bss.stack_ptr:0000000000000000 stack_ptr
     /tmp/cchXHjty.s:665    .bss.next_task:0000000000000000 next_task
     /tmp/cchXHjty.s:661    .bss.next_task:0000000000000000 $d
     /tmp/cchXHjty.s:668    .bss.stack_ptr:0000000000000000 $d

UNDEFINED SYMBOLS
removeFromWaitingList
addToReadyList
WaitingHead
ReadyHead
idle_task
removeFromReadyList
addToWaitingList
create_idle_task
